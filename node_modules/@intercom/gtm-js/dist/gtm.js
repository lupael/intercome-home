(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.GTM = factory());
}(this, (function () { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function unwrapExports (x) {
    	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
    }

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    var js_cookie = createCommonjsModule(function (module, exports) {
    (function (factory) {
    	var registeredInModuleLoader;
    	{
    		module.exports = factory();
    		registeredInModuleLoader = true;
    	}
    	if (!registeredInModuleLoader) {
    		var OldCookies = window.Cookies;
    		var api = window.Cookies = factory();
    		api.noConflict = function () {
    			window.Cookies = OldCookies;
    			return api;
    		};
    	}
    }(function () {
    	function extend () {
    		var i = 0;
    		var result = {};
    		for (; i < arguments.length; i++) {
    			var attributes = arguments[ i ];
    			for (var key in attributes) {
    				result[key] = attributes[key];
    			}
    		}
    		return result;
    	}

    	function decode (s) {
    		return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
    	}

    	function init (converter) {
    		function api() {}

    		function set (key, value, attributes) {
    			if (typeof document === 'undefined') {
    				return;
    			}

    			attributes = extend({
    				path: '/'
    			}, api.defaults, attributes);

    			if (typeof attributes.expires === 'number') {
    				attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);
    			}

    			// We're using "expires" because "max-age" is not supported by IE
    			attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

    			try {
    				var result = JSON.stringify(value);
    				if (/^[\{\[]/.test(result)) {
    					value = result;
    				}
    			} catch (e) {}

    			value = converter.write ?
    				converter.write(value, key) :
    				encodeURIComponent(String(value))
    					.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);

    			key = encodeURIComponent(String(key))
    				.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)
    				.replace(/[\(\)]/g, escape);

    			var stringifiedAttributes = '';
    			for (var attributeName in attributes) {
    				if (!attributes[attributeName]) {
    					continue;
    				}
    				stringifiedAttributes += '; ' + attributeName;
    				if (attributes[attributeName] === true) {
    					continue;
    				}

    				// Considers RFC 6265 section 5.2:
    				// ...
    				// 3.  If the remaining unparsed-attributes contains a %x3B (";")
    				//     character:
    				// Consume the characters of the unparsed-attributes up to,
    				// not including, the first %x3B (";") character.
    				// ...
    				stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
    			}

    			return (document.cookie = key + '=' + value + stringifiedAttributes);
    		}

    		function get (key, json) {
    			if (typeof document === 'undefined') {
    				return;
    			}

    			var jar = {};
    			// To prevent the for loop in the first place assign an empty array
    			// in case there are no cookies at all.
    			var cookies = document.cookie ? document.cookie.split('; ') : [];
    			var i = 0;

    			for (; i < cookies.length; i++) {
    				var parts = cookies[i].split('=');
    				var cookie = parts.slice(1).join('=');

    				if (!json && cookie.charAt(0) === '"') {
    					cookie = cookie.slice(1, -1);
    				}

    				try {
    					var name = decode(parts[0]);
    					cookie = (converter.read || converter)(cookie, name) ||
    						decode(cookie);

    					if (json) {
    						try {
    							cookie = JSON.parse(cookie);
    						} catch (e) {}
    					}

    					jar[name] = cookie;

    					if (key === name) {
    						break;
    					}
    				} catch (e) {}
    			}

    			return key ? jar[key] : jar;
    		}

    		api.set = set;
    		api.get = function (key) {
    			return get(key, false /* read as raw */);
    		};
    		api.getJSON = function (key) {
    			return get(key, true /* read as json */);
    		};
    		api.remove = function (key, attributes) {
    			set(key, '', extend(attributes, {
    				expires: -1
    			}));
    		};

    		api.defaults = {};

    		api.withConverter = init;

    		return api;
    	}

    	return init(function () {});
    }));
    });

    // Unique ID creation requires a high quality random # generator. In the browser we therefore
    // require the crypto API and do not support built-in fallback to lower quality random number
    // generators (like Math.random()).
    // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
    // find the complete implementation of crypto (msCrypto) on IE11.
    var getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);
    var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef

    function rng() {
      if (!getRandomValues) {
        throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
      }

      return getRandomValues(rnds8);
    }

    /**
     * Convert array of 16 byte values to UUID string format of the form:
     * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
     */
    var byteToHex = [];

    for (var i = 0; i < 256; ++i) {
      byteToHex[i] = (i + 0x100).toString(16).substr(1);
    }

    function bytesToUuid(buf, offset) {
      var i = offset || 0;
      var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4

      return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');
    }

    function v4(options, buf, offset) {
      var i = buf && offset || 0;

      if (typeof options == 'string') {
        buf = options === 'binary' ? new Array(16) : null;
        options = null;
      }

      options = options || {};
      var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`

      rnds[6] = rnds[6] & 0x0f | 0x40;
      rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided

      if (buf) {
        for (var ii = 0; ii < 16; ++ii) {
          buf[i + ii] = rnds[ii];
        }
      }

      return buf || bytesToUuid(rnds);
    }

    function getEnvironment() {
      var hostname = window.location.hostname;

      if (STAGING_HOSTNAMES.includes(hostname)) {
        return 'staging';
      }

      if (hostname.endsWith('.intercom.com') || hostname.endsWith('.intercom.io') || hostname.endsWith('intercom.engineering') || hostname.endsWith('intercom.design')) {
        return 'production';
      }

      return 'local';
    }
    var STAGING_HOSTNAMES = ['marketing-site-static-staging.internal.intercom.io', 'preview.intercom.com', 'full-intercombuilders.cs194.force.com'];

    function apiEndpoint () {
      switch (getEnvironment()) {
        case 'local':
          return 'http://intercom.test/visitor_analytics';

        case 'staging':
          return 'https://funky-staging.intercom.io/visitor_analytics';

        case 'production':
          return 'https://api-visitor-analytics.intercom.com/visitor_analytics';
      }
    }

    var Intercom =
    /** @class */
    function () {
      function Intercom() {}

      Intercom.prototype.get = function (url, options) {
        if (options === void 0) {
          options = {};
        }

        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            return [2
            /*return*/
            , this.request('get', url, options)];
          });
        });
      };

      Intercom.prototype.post = function (url, body, options) {
        if (options === void 0) {
          options = {};
        }

        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            return [2
            /*return*/
            , this.request('post', url, __assign({
              body: body
            }, options))];
          });
        });
      };

      Intercom.prototype.request = function (method, url, _a) {
        var _b = _a.query,
            query = _b === void 0 ? {} : _b,
            _c = _a.body,
            body = _c === void 0 ? {} : _c,
            _d = _a.headers,
            headers = _d === void 0 ? {} : _d,
            _e = _a.timeout,
            timeout = _e === void 0 ? 5000 : _e;
        return __awaiter(this, void 0, void 0, function () {
          var params, response, parsed_1, text_1, exception_1;
          return __generator(this, function (_f) {
            switch (_f.label) {
              case 0:
                url = new URL([apiEndpoint(), url.replace(/^\//, '')].join('/')).toString();
                params = new URLSearchParams(query).toString();
                if (params) url += "?" + params;
                _f.label = 1;

              case 1:
                _f.trys.push([1, 6,, 7]);

                return [4
                /*yield*/
                , Promise.race([fetch(url, {
                  method: method,
                  credentials: 'include',
                  headers: __assign({
                    'Content-Type': 'application/json'
                  }, headers),
                  body: method === 'post' ? JSON.stringify(body) : undefined
                }), rejectAfterTimeout(timeout, new Error("Request to " + url + " timed out after " + timeout + "ms"))])];

              case 2:
                response = _f.sent();
                if (!response.ok) return [3
                /*break*/
                , 4];
                return [4
                /*yield*/
                , response.json()];

              case 3:
                parsed_1 = _f.sent();
                return [2
                /*return*/
                , {
                  error: null,
                  status: response.status,
                  data: parsed_1,
                  resultOrThrow: function resultOrThrow() {
                    return parsed_1;
                  }
                }];

              case 4:
                return [4
                /*yield*/
                , response.text()];

              case 5:
                text_1 = _f.sent();
                return [2
                /*return*/
                , {
                  error: true,
                  exception: null,
                  data: text_1.toString(),
                  status: response.status,
                  resultOrThrow: function resultOrThrow() {
                    throw new Error(text_1);
                  }
                }];

              case 6:
                exception_1 = _f.sent();
                return [2
                /*return*/
                , {
                  error: true,
                  exception: exception_1,
                  resultOrThrow: function resultOrThrow() {
                    throw exception_1;
                  }
                }];

              case 7:
                return [2
                /*return*/
                ];
            }
          });
        });
      };

      return Intercom;
    }();

    function rejectAfterTimeout(timeout, error) {
      return new Promise(function (_, reject) {
        setTimeout(function () {
          return reject(error);
        }, timeout);
      });
    }

    var intercom = new Intercom();

    function appStatus(email) {
      var _a;

      return __awaiter(this, void 0, void 0, function () {
        var error_1;
        return __generator(this, function (_b) {
          switch (_b.label) {
            case 0:
              _b.trys.push([0, 2,, 3]);

              return [4
              /*yield*/
              , intercom.post('/app_status', {
                email: email
              })];

            case 1:
              _b.sent();

              return [3
              /*break*/
              , 3];

            case 2:
              error_1 = _b.sent();
              (_a = window.Raven) === null || _a === void 0 ? void 0 : _a.captureException(error_1);
              return [3
              /*break*/
              , 3];

            case 3:
              return [2
              /*return*/
              ];
          }
        });
      });
    }

    var n,u,i$1,t,r,o,f,e={},c=[],s=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord/i;function a(n,l){for(var u in l)n[u]=l[u];return n}function v(n){var l=n.parentNode;l&&l.removeChild(n);}function h(n,l,u){var i,t=arguments,r={};for(i in l)"key"!==i&&"ref"!==i&&(r[i]=l[i]);if(arguments.length>3)for(u=[u],i=3;i<arguments.length;i++)u.push(t[i]);if(null!=u&&(r.children=u),"function"==typeof n&&null!=n.defaultProps)for(i in n.defaultProps)void 0===r[i]&&(r[i]=n.defaultProps[i]);return p(n,r,l&&l.key,l&&l.ref,null)}function p(l,u,i,t,r){var o={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:r};return null==r&&(o.__v=o),n.vnode&&n.vnode(o),o}function d(n){return n.children}function m(n,l){this.props=n,this.context=l;}function w(n,l){if(null==l)return n.__?w(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return "function"==typeof n.type?w(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function g(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!i$1++||r!==n.debounceRendering)&&((r=n.debounceRendering)||t)(_);}function _(){for(var n;i$1=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,r,o,f;n.__d&&(o=(r=(l=n).__v).__e,(f=l.__P)&&(u=[],(i=a({},r)).__v=i,t=A(f,r,i,l.__n,void 0!==f.ownerSVGElement,null,u,null==o?w(r):o),T(u,r),t!=o&&k(r)));});}function b(n,l,u,i,t,r,o,f,s){var a,h,p,y,d,m,k,g=u&&u.__k||c,_=g.length;if(f==e&&(f=null!=r?r[0]:_?w(u,0):null),a=0,l.__k=x(l.__k,function(u){if(null!=u){if(u.__=l,u.__b=l.__b+1,null===(p=g[a])||p&&u.key==p.key&&u.type===p.type)g[a]=void 0;else for(h=0;h<_;h++){if((p=g[h])&&u.key==p.key&&u.type===p.type){g[h]=void 0;break}p=null;}if(y=A(n,u,p=p||e,i,t,r,o,f,s),(h=u.ref)&&p.ref!=h&&(k||(k=[]),p.ref&&k.push(p.ref,null,u),k.push(h,u.__c||y,u)),null!=y){var c;if(null==m&&(m=y),void 0!==u.__d)c=u.__d,u.__d=void 0;else if(r==p||y!=f||null==y.parentNode){n:if(null==f||f.parentNode!==n)n.appendChild(y),c=null;else {for(d=f,h=0;(d=d.nextSibling)&&h<_;h+=2)if(d==y)break n;n.insertBefore(y,f),c=f;}"option"==l.type&&(n.value="");}f=void 0!==c?c:y.nextSibling,"function"==typeof l.type&&(l.__d=f);}else f&&p.__e==f&&f.parentNode!=n&&(f=w(p));}return a++,u}),l.__e=m,null!=r&&"function"!=typeof l.type)for(a=r.length;a--;)null!=r[a]&&v(r[a]);for(a=_;a--;)null!=g[a]&&D(g[a],g[a]);if(k)for(a=0;a<k.length;a++)j(k[a],k[++a],k[++a]);}function x(n,l,u){if(null==u&&(u=[]),null==n||"boolean"==typeof n)l&&u.push(l(null));else if(Array.isArray(n))for(var i=0;i<n.length;i++)x(n[i],l,u);else u.push(l?l("string"==typeof n||"number"==typeof n?p(null,n,null,null,n):null!=n.__e||null!=n.__c?p(n.type,n.props,n.key,null,n.__v):n):n);return u}function P(n,l,u,i,t){var r;for(r in u)"children"===r||"key"===r||r in l||N(n,r,null,u[r],i);for(r in l)t&&"function"!=typeof l[r]||"children"===r||"key"===r||"value"===r||"checked"===r||u[r]===l[r]||N(n,r,l[r],u[r],i);}function C(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]="number"==typeof u&&!1===s.test(l)?u+"px":null==u?"":u;}function N(n,l,u,i,t){var r,o,f,e,c;if(t?"className"===l&&(l="class"):"class"===l&&(l="className"),"style"===l)if(r=n.style,"string"==typeof u)r.cssText=u;else {if("string"==typeof i&&(r.cssText="",i=null),i)for(e in i)u&&e in u||C(r,e,"");if(u)for(c in u)i&&u[c]===i[c]||C(r,c,u[c]);}else "o"===l[0]&&"n"===l[1]?(o=l!==(l=l.replace(/Capture$/,"")),f=l.toLowerCase(),l=(f in n?f:l).slice(2),u?(i||n.addEventListener(l,z,o),(n.l||(n.l={}))[l]=u):n.removeEventListener(l,z,o)):"list"!==l&&"tagName"!==l&&"form"!==l&&"type"!==l&&"size"!==l&&!t&&l in n?n[l]=null==u?"":u:"function"!=typeof u&&"dangerouslySetInnerHTML"!==l&&(l!==(l=l.replace(/^xlink:?/,""))?null==u||!1===u?n.removeAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase()):n.setAttributeNS("http://www.w3.org/1999/xlink",l.toLowerCase(),u):null==u||!1===u&&!/^ar/.test(l)?n.removeAttribute(l):n.setAttribute(l,u));}function z(l){this.l[l.type](n.event?n.event(l):l);}function A(l,u,i,t,r,o,f,e,c){var s,v,h,p,y,w,k,g,_,x,P=u.type;if(void 0!==u.constructor)return null;(s=n.__b)&&s(u);try{n:if("function"==typeof P){if(g=u.props,_=(s=P.contextType)&&t[s.__c],x=s?_?_.props.value:s.__:t,i.__c?k=(v=u.__c=i.__c).__=v.__E:("prototype"in P&&P.prototype.render?u.__c=v=new P(g,x):(u.__c=v=new m(g,x),v.constructor=P,v.render=E),_&&_.sub(v),v.props=g,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=a({},v.__s)),a(v.__s,P.getDerivedStateFromProps(g,v.__s))),p=v.props,y=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else {if(null==P.getDerivedStateFromProps&&g!==p&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(g,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(g,v.__s,x)||u.__v===i.__v&&!v.__){for(v.props=g,v.state=v.__s,u.__v!==i.__v&&(v.__d=!1),v.__v=u,u.__e=i.__e,u.__k=i.__k,v.__h.length&&f.push(v),s=0;s<u.__k.length;s++)u.__k[s]&&(u.__k[s].__=u);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(g,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(p,y,w);});}v.context=x,v.props=g,v.state=v.__s,(s=n.__r)&&s(u),v.__d=!1,v.__v=u,v.__P=l,s=v.render(v.props,v.state,v.context),u.__k=null!=s&&s.type==d&&null==s.key?s.props.children:Array.isArray(s)?s:[s],null!=v.getChildContext&&(t=a(a({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(w=v.getSnapshotBeforeUpdate(p,y)),b(l,u,i,t,r,o,f,e,c),v.base=u.__e,v.__h.length&&f.push(v),k&&(v.__E=v.__=null),v.__e=!1;}else null==o&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=$(i.__e,u,i,t,r,o,f,c);(s=n.diffed)&&s(u);}catch(l){u.__v=null,n.__e(l,u,i);}return u.__e}function T(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u);});}catch(l){n.__e(l,u.__v);}});}function $(n,l,u,i,t,r,o,f){var s,a,v,h,p,y=u.props,d=l.props;if(t="svg"===l.type||t,null!=r)for(s=0;s<r.length;s++)if(null!=(a=r[s])&&((null===l.type?3===a.nodeType:a.localName===l.type)||n==a)){n=a,r[s]=null;break}if(null==n){if(null===l.type)return document.createTextNode(d);n=t?document.createElementNS("http://www.w3.org/2000/svg",l.type):document.createElement(l.type,d.is&&{is:d.is}),r=null,f=!1;}if(null===l.type)y!==d&&n.data!=d&&(n.data=d);else {if(null!=r&&(r=c.slice.call(n.childNodes)),v=(y=u.props||e).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!f){if(y===e)for(y={},p=0;p<n.attributes.length;p++)y[n.attributes[p].name]=n.attributes[p].value;(h||v)&&(h&&v&&h.__html==v.__html||(n.innerHTML=h&&h.__html||""));}P(n,d,y,t,f),h?l.__k=[]:(l.__k=l.props.children,b(n,l,u,i,"foreignObject"!==l.type&&t,r,o,e,f)),f||("value"in d&&void 0!==(s=d.value)&&s!==n.value&&N(n,"value",s,y.value,!1),"checked"in d&&void 0!==(s=d.checked)&&s!==n.checked&&N(n,"checked",s,y.checked,!1));}return n}function j(l,u,i){try{"function"==typeof l?l(u):l.current=u;}catch(l){n.__e(l,i);}}function D(l,u,i){var t,r,o;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||j(t,null,u)),i||"function"==typeof l.type||(i=null!=(r=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount();}catch(l){n.__e(l,u);}t.base=t.__P=null;}if(t=l.__k)for(o=0;o<t.length;o++)t[o]&&D(t[o],u,i);null!=r&&v(r);}function E(n,l,u){return this.constructor(n,u)}function H(l,u,i){var t,r,f;n.__&&n.__(l,u),r=(t=i===o)?null:i&&i.__k||u.__k,l=h(d,null,[l]),f=[],A(u,(t?u:i||u).__k=l,r||e,e,void 0!==u.ownerSVGElement,i&&!t?[i]:r?null:c.slice.call(u.childNodes),f,i||e,t),T(f,l);}function L(n,l){var u,i;for(i in l=a(a({},n.props),l),arguments.length>2&&(l.children=c.slice.call(arguments,2)),u={},l)"key"!==i&&"ref"!==i&&(u[i]=l[i]);return p(n.type,u,l.key||n.key,l.ref||n.ref,null)}function M(n){var l={},u={__c:"__cC"+f++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var i,t=this;return this.getChildContext||(i=[],this.getChildContext=function(){return l[u.__c]=t,l},this.shouldComponentUpdate=function(n){t.props.value!==n.value&&i.some(function(l){l.context=n.value,g(l);});},this.sub=function(n){i.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){i.splice(i.indexOf(n),1),l&&l.call(n);};}),n.children}};return u.Consumer.contextType=u,u.Provider.__=u,u}n={__e:function(n,l){for(var u,i;l=l.__;)if((u=l.__c)&&!u.__)try{if(u.constructor&&null!=u.constructor.getDerivedStateFromError&&(i=!0,u.setState(u.constructor.getDerivedStateFromError(n))),null!=u.componentDidCatch&&(i=!0,u.componentDidCatch(n)),i)return g(u.__E=u)}catch(l){n=l;}throw n}},m.prototype.setState=function(n,l){var u;u=this.__s!==this.state?this.__s:this.__s=a({},this.state),"function"==typeof n&&(n=n(u,this.props)),n&&a(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),g(this));},m.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),g(this));},m.prototype.render=d,u=[],i$1=0,t="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,o=e,f=0;

    var t$1,u$1,r$1,i$2=0,o$1=[],c$1=n.__r,f$1=n.diffed,e$1=n.__c,a$1=n.unmount;function v$1(t,r){n.__h&&n.__h(u$1,t,i$2||r),i$2=0;var o=u$1.__H||(u$1.__H={__:[],__h:[]});return t>=o.__.length&&o.__.push({}),o.__[t]}function m$1(n){return i$2=1,p$1(E$1,n)}function p$1(n,r,i){var o=v$1(t$1++,2);return o.__c||(o.__c=u$1,o.__=[i?i(r):E$1(void 0,r),function(t){var u=n(o.__[0],t);o.__[0]!==u&&(o.__[0]=u,o.__c.setState({}));}]),o.__}function l(r,i){var o=v$1(t$1++,3);!n.__s&&x$1(o.__H,i)&&(o.__=r,o.__H=i,u$1.__H.__h.push(o));}function d$1(n){return i$2=5,h$1(function(){return {current:n}},[])}function h$1(n,u){var r=v$1(t$1++,7);return x$1(r.__H,u)?(r.__H=u,r.__h=n,r.__=n()):r.__}function w$1(n){var r=u$1.context[n.__c],i=v$1(t$1++,9);return i.__c=n,r?(null==i.__&&(i.__=!0,r.sub(u$1)),r.props.value):n.__}function _$1(){o$1.some(function(t){if(t.__P)try{t.__H.__h.forEach(g$1),t.__H.__h.forEach(q),t.__H.__h=[];}catch(u){return t.__H.__h=[],n.__e(u,t.__v),!0}}),o$1=[];}function g$1(n){n.t&&n.t();}function q(n){var t=n.__();"function"==typeof t&&(n.t=t);}function x$1(n,t){return !n||t.some(function(t,u){return t!==n[u]})}function E$1(n,t){return "function"==typeof t?t(n):t}n.__r=function(n){c$1&&c$1(n),t$1=0,(u$1=n.__c).__H&&(u$1.__H.__h.forEach(g$1),u$1.__H.__h.forEach(q),u$1.__H.__h=[]);},n.diffed=function(t){f$1&&f$1(t);var u=t.__c;if(u){var i=u.__H;i&&i.__h.length&&(1!==o$1.push(u)&&r$1===n.requestAnimationFrame||((r$1=n.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),cancelAnimationFrame(t),setTimeout(n);},r=setTimeout(u,100);"undefined"!=typeof window&&(t=requestAnimationFrame(u));})(_$1));}},n.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g$1),t.__h=t.__h.filter(function(n){return !n.__||q(n)});}catch(r){u.some(function(n){n.__h&&(n.__h=[]);}),u=[],n.__e(r,t.__v);}}),e$1&&e$1(t,u);},n.unmount=function(t){a$1&&a$1(t);var u=t.__c;if(u){var r=u.__H;if(r)try{r.__.forEach(function(n){return n.t&&n.t()});}catch(t){n.__e(t,u.__v);}}};

    var _id = 0;
    var sheet = document.head.appendChild(document.createElement("style")).sheet;

    function hyphenate(str) {
      return str.replace(/[A-Z]/g, "-$&").toLowerCase()
    }

    function createStyle(rules, prefix) {
      var id = "p" + _id++;
      var name = prefix + id;
      rules.forEach(function(rule) {
        if (/^@/.test(rule)) {
          var start = rule.indexOf("{") + 1;
          rule = rule.slice(0, start) + name + rule.slice(start);
        } else {
          rule = name + rule;
        }
        sheet.insertRule(rule, sheet.cssRules.length);
      });
      return id
    }

    function wrap(stringToWrap, wrapper) {
      return wrapper + "{" + stringToWrap + "}"
    }

    function parse(obj, isInsideObj) {
      var arr = [""];
      isInsideObj = isInsideObj || 0;
      for (var prop in obj) {
        var value = obj[prop];
        prop = hyphenate(prop);
        // Same as typeof value === 'object', but smaller
        if (!value.sub && !Array.isArray(value)) {
          // replace & in "&:hover", "p>&"
          prop = prop.replace(/&/g, "");
          arr.push(wrap(parse(value, !/^@/.test(prop)).join(""), prop));
        } else {
          value = Array.isArray(value) ? value : [value];
          value.forEach(function(value) {
            return (arr[0] += prop + ":" + value + ";")
          });
        }
      }
      if (!isInsideObj) {
        arr[0] = wrap(arr[0], "");
      }
      return arr
    }

    function picostyle(h, options) {
      var cache = {};
      options = options || {};
      return options.returnObject ? { style: style, css: css } : style
      function style(nodeName) {
        return function(decls) {
          return function(attributes, children) {
            attributes = attributes || {};
            children = attributes.children || children;
            var nodeDecls = typeof decls == "function" ? decls(attributes) : decls;
            attributes.class = [css(nodeDecls), attributes.class]
              .filter(Boolean)
              .join(" ");
            return h(nodeName, attributes, children)
          }
        }
      }
      function css(decls) {
        var rules = parse(decls);
        var key = rules.join("");
        return cache[key] || (cache[key] = createStyle(rules, "."))
      }
    }

    var helpers = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.removeEventListener = exports.addEventListener = exports.getAllFocusableElements = exports.KEYS = void 0;
    var KEYS = {
      TAB: 9
    };
    exports.KEYS = KEYS;

    var getAllFocusableElements = function getAllFocusableElements(context) {
      return Array.from(context.querySelectorAll('button, [href], input:not([type="hidden"]), select, textarea, [tabindex]:not([tabindex="-1"])'));
    };

    exports.getAllFocusableElements = getAllFocusableElements;

    var addEventListener = function addEventListener(node, eventName, callback) {
      if (node.addEventListener) {
        node.addEventListener(eventName, callback);
      } else {
        node.attachEvent("on".concat(eventName), callback);
      }
    };

    exports.addEventListener = addEventListener;

    var removeEventListener = function removeEventListener(node, eventName, callback) {
      if (node.removeEventListener) {
        node.removeEventListener(eventName, callback);
      } else {
        node.detachEvent("on".concat(eventName), callback);
      }
    };

    exports.removeEventListener = removeEventListener;
    });

    unwrapExports(helpers);
    helpers.removeEventListener;
    helpers.addEventListener;
    helpers.getAllFocusableElements;
    helpers.KEYS;

    var dest = createCommonjsModule(function (module, exports) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;



    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

    function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

    function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

    var boolNoop = function boolNoop() {
      return false;
    };

    var nullNoop = function nullNoop() {
      return null;
    };

    var FocusTrap =
    /*#__PURE__*/
    function () {
      function FocusTrap(_ref) {
        var _this = this;

        var node = _ref.node,
            _firstElement = _ref.firstElement,
            _lastElement = _ref.lastElement,
            _disableStartingTrap = _ref.disableStartingTrap,
            _disableEndingTrap = _ref.disableEndingTrap;

        _classCallCheck(this, FocusTrap);

        _defineProperty(this, "node", void 0);

        _defineProperty(this, "firstElement", void 0);

        _defineProperty(this, "lastElement", void 0);

        _defineProperty(this, "disableStartingTrap", void 0);

        _defineProperty(this, "disableEndingTrap", void 0);

        _defineProperty(this, "focusableElements", null);

        _defineProperty(this, "handleFocusTrap", function (event) {
          var focusableElements = _this.focusableElements,
              firstElement = _this.firstElement,
              lastElement = _this.lastElement,
              disableEndingTrap = _this.disableEndingTrap,
              disableStartingTrap = _this.disableStartingTrap;
          if (!focusableElements || !focusableElements.length || event.keyCode !== helpers.KEYS.TAB) return;
          var first = focusableElements[0];
          var last = focusableElements[focusableElements.length - 1];
          var isBackwards = event.shiftKey;

          if (last === event.srcElement && !isBackwards && !disableEndingTrap()) {
            event.preventDefault();
            return (firstElement() || first).focus();
          }

          if (first === event.srcElement && isBackwards && !disableStartingTrap()) {
            event.preventDefault();
            return (lastElement() || last).focus();
          }
        });

        this.node = node;
        this.firstElement = _firstElement || nullNoop;
        this.lastElement = _lastElement || nullNoop;
        this.disableStartingTrap = _disableStartingTrap || boolNoop;
        this.disableEndingTrap = _disableEndingTrap || boolNoop;
        this.focusableElements = (0, helpers.getAllFocusableElements)(this.node);
        (0, helpers.addEventListener)(this.node, 'keydown', this.handleFocusTrap);
      }

      _createClass(FocusTrap, [{
        key: "recalculateFocusableElements",
        value: function recalculateFocusableElements() {
          this.focusableElements = (0, helpers.getAllFocusableElements)(this.node);
        }
      }, {
        key: "restore",
        value: function restore() {
          if (this.node) {
            (0, helpers.removeEventListener)(this.node, 'keydown', this.handleFocusTrap);
          }
        }
      }]);

      return FocusTrap;
    }();

    exports.default = FocusTrap;
    });

    var FocusTrap = unwrapExports(dest);

    function _typeof(obj) {
      "@babel/helpers - typeof";

      if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
        _typeof = function (obj) {
          return typeof obj;
        };
      } else {
        _typeof = function (obj) {
          return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
        };
      }

      return _typeof(obj);
    }

    function _extends() {
      _extends = Object.assign || function (target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];

          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }

        return target;
      };

      return _extends.apply(this, arguments);
    }

    var css = picostyle(h);

    function primaryStyles(props) {
      return {
        backgroundColor: '#181818 !important',
        border: '2px solid #181818',
        color: '#fff',
        ':hover': __assign({
          backgroundColor: '#ffffff !important',
          borderColor: '#181818',
          color: '#181818'
        }, props.size === 'small' && {
          backgroundColor: '#181818',
          borderColor: '#181818',
          color: '#fff'
        })
      };
    }

    function secondaryStyles() {
      return {
        backgroundColor: 'transparent',
        border: '2px solid #181818',
        color: '#181818',
        ':hover': {
          backgroundColor: '#181818',
          borderColor: '#181818',
          color: '#fff'
        }
      };
    }

    function smallStyles() {
      return {
        padding: '6px 20px 2px',
        fontSize: '14px',
        fontWeight: 'normal',
        '@media (max-width: 410px)': {
          padding: '6px 10px 2px'
        }
      };
    }

    var ButtonStyles = function ButtonStyles(props) {
      return __assign(__assign(__assign(__assign(__assign(__assign({
        margin: '0',
        fontFamily: 'GDPRGraphik, Graphik, Helvetica, Arial, sans-serif',
        lineHeight: '1.4',
        '-webkit-font-smoothing': 'inherit',
        '-moz-osx-font-smoothing': 'inherit',
        '-webkit-appearance': 'none',
        display: 'inline-block',
        borderRadius: '6px',
        padding: '12px 21px',
        '-webkit-text-decoration': 'none',
        textDecoration: 'none',
        textAlign: 'center',
        transition: 'all 200ms',
        cursor: 'pointer',
        flexShrink: '0',
        fontSize: '16px',
        fontWeight: 'bold',
        position: 'relative'
      }, props.width && {
        width: "" + props.width
      }), props.variant === 'primary' && primaryStyles(props)), props.variant === 'secondary' && secondaryStyles()), props.size === 'small' && smallStyles()), props.disabled && {
        pointerEvents: 'none',
        opacity: '0.4'
      }), props.error && {
        borderColor: '#ec7965'
      });
    };
    var ButtonElement = css('button')(ButtonStyles);
    function Button(_a) {
      var children = _a.children,
          onClick = _a.onClick,
          _b = _a.variant,
          variant = _b === void 0 ? 'primary' : _b,
          size = _a.size,
          rest = __rest(_a, ["children", "onClick", "variant", "size"]);

      return h(ButtonElement, _extends({
        "class": "bold-focus " + (size ? "cookie-consent-button__" + size : ''),
        onClick: onClick,
        type: "button",
        variant: variant,
        size: size
      }, rest), children);
    }

    function AccordionManager(_a) {
      var children = _a.children;

      var _b = m$1(null),
          active = _b[0],
          setActive = _b[1];

      return children.map(function (child, index) {
        return L(child, {
          onClick: function onClick() {
            return setActive(active === index ? null : index);
          },
          expanded: active === index
        });
      });
    }

    function Caret() {
      return h("svg", {
        "aria-hidden": "true",
        focusable: "false",
        width: "8",
        height: "5",
        viewBox: "0 0 8 5",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg"
      }, h("path", {
        d: "M7 4L4 1L1 4",
        stroke: "black",
        "stroke-width": "2",
        "stroke-linecap": "round",
        "stroke-linejoin": "round"
      }));
    }

    /**
     * A specialized version of `_.reduce` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @param {boolean} [initAccum] Specify using the first element of `array` as
     *  the initial value.
     * @returns {*} Returns the accumulated value.
     */
    function arrayReduce(array, iteratee, accumulator, initAccum) {
      var index = -1,
          length = array == null ? 0 : array.length;

      if (initAccum && length) {
        accumulator = array[++index];
      }
      while (++index < length) {
        accumulator = iteratee(accumulator, array[index], index, array);
      }
      return accumulator;
    }

    var _arrayReduce = arrayReduce;

    /**
     * The base implementation of `_.propertyOf` without support for deep paths.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyOf(object) {
      return function(key) {
        return object == null ? undefined : object[key];
      };
    }

    var _basePropertyOf = basePropertyOf;

    /** Used to map Latin Unicode letters to basic Latin letters. */
    var deburredLetters = {
      // Latin-1 Supplement block.
      '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
      '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
      '\xc7': 'C',  '\xe7': 'c',
      '\xd0': 'D',  '\xf0': 'd',
      '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
      '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
      '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
      '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
      '\xd1': 'N',  '\xf1': 'n',
      '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
      '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
      '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
      '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
      '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
      '\xc6': 'Ae', '\xe6': 'ae',
      '\xde': 'Th', '\xfe': 'th',
      '\xdf': 'ss',
      // Latin Extended-A block.
      '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
      '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
      '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
      '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
      '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
      '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
      '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
      '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
      '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
      '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
      '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
      '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
      '\u0134': 'J',  '\u0135': 'j',
      '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
      '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
      '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
      '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
      '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
      '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
      '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
      '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
      '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
      '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
      '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
      '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
      '\u0163': 't',  '\u0165': 't', '\u0167': 't',
      '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
      '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
      '\u0174': 'W',  '\u0175': 'w',
      '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
      '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
      '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
      '\u0132': 'IJ', '\u0133': 'ij',
      '\u0152': 'Oe', '\u0153': 'oe',
      '\u0149': "'n", '\u017f': 's'
    };

    /**
     * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
     * letters to basic Latin letters.
     *
     * @private
     * @param {string} letter The matched letter to deburr.
     * @returns {string} Returns the deburred letter.
     */
    var deburrLetter = _basePropertyOf(deburredLetters);

    var _deburrLetter = deburrLetter;

    /** Detect free variable `global` from Node.js. */
    var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

    var _freeGlobal = freeGlobal;

    /** Detect free variable `self`. */
    var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

    /** Used as a reference to the global object. */
    var root = _freeGlobal || freeSelf || Function('return this')();

    var _root = root;

    /** Built-in value references. */
    var Symbol$1 = _root.Symbol;

    var _Symbol = Symbol$1;

    /**
     * A specialized version of `_.map` for arrays without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function arrayMap(array, iteratee) {
      var index = -1,
          length = array == null ? 0 : array.length,
          result = Array(length);

      while (++index < length) {
        result[index] = iteratee(array[index], index, array);
      }
      return result;
    }

    var _arrayMap = arrayMap;

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    var isArray_1 = isArray;

    /** Used for built-in method references. */
    var objectProto = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Built-in value references. */
    var symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    var _getRawTag = getRawTag;

    /** Used for built-in method references. */
    var objectProto$1 = Object.prototype;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString$1 = objectProto$1.toString;

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString$1.call(value);
    }

    var _objectToString = objectToString;

    /** `Object#toString` result references. */
    var nullTag = '[object Null]',
        undefinedTag = '[object Undefined]';

    /** Built-in value references. */
    var symToStringTag$1 = _Symbol ? _Symbol.toStringTag : undefined;

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag$1 && symToStringTag$1 in Object(value))
        ? _getRawTag(value)
        : _objectToString(value);
    }

    var _baseGetTag = baseGetTag;

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    var isObjectLike_1 = isObjectLike;

    /** `Object#toString` result references. */
    var symbolTag = '[object Symbol]';

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike_1(value) && _baseGetTag(value) == symbolTag);
    }

    var isSymbol_1 = isSymbol;

    /** Used as references for various `Number` constants. */
    var INFINITY = 1 / 0;

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = _Symbol ? _Symbol.prototype : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray_1(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return _arrayMap(value, baseToString) + '';
      }
      if (isSymbol_1(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    var _baseToString = baseToString;

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : _baseToString(value);
    }

    var toString_1 = toString;

    /** Used to match Latin Unicode letters (excluding mathematical operators). */
    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

    /** Used to compose unicode character classes. */
    var rsComboMarksRange = '\\u0300-\\u036f',
        reComboHalfMarksRange = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange = '\\u20d0-\\u20ff',
        rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;

    /** Used to compose unicode capture groups. */
    var rsCombo = '[' + rsComboRange + ']';

    /**
     * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
     * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
     */
    var reComboMark = RegExp(rsCombo, 'g');

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString_1(string);
      return string && string.replace(reLatin, _deburrLetter).replace(reComboMark, '');
    }

    var deburr_1 = deburr;

    /** Used to match words composed of alphanumeric characters. */
    var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

    /**
     * Splits an ASCII `string` into an array of its words.
     *
     * @private
     * @param {string} The string to inspect.
     * @returns {Array} Returns the words of `string`.
     */
    function asciiWords(string) {
      return string.match(reAsciiWord) || [];
    }

    var _asciiWords = asciiWords;

    /** Used to detect strings that need a more robust regexp to match words. */
    var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

    /**
     * Checks if `string` contains a word composed of Unicode symbols.
     *
     * @private
     * @param {string} string The string to inspect.
     * @returns {boolean} Returns `true` if a word is found, else `false`.
     */
    function hasUnicodeWord(string) {
      return reHasUnicodeWord.test(string);
    }

    var _hasUnicodeWord = hasUnicodeWord;

    /** Used to compose unicode character classes. */
    var rsAstralRange = '\\ud800-\\udfff',
        rsComboMarksRange$1 = '\\u0300-\\u036f',
        reComboHalfMarksRange$1 = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange$1 = '\\u20d0-\\u20ff',
        rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1,
        rsDingbatRange = '\\u2700-\\u27bf',
        rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
        rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
        rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
        rsPunctuationRange = '\\u2000-\\u206f',
        rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
        rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
        rsVarRange = '\\ufe0e\\ufe0f',
        rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

    /** Used to compose unicode capture groups. */
    var rsApos = "['\u2019]",
        rsBreak = '[' + rsBreakRange + ']',
        rsCombo$1 = '[' + rsComboRange$1 + ']',
        rsDigits = '\\d+',
        rsDingbat = '[' + rsDingbatRange + ']',
        rsLower = '[' + rsLowerRange + ']',
        rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
        rsFitz = '\\ud83c[\\udffb-\\udfff]',
        rsModifier = '(?:' + rsCombo$1 + '|' + rsFitz + ')',
        rsNonAstral = '[^' + rsAstralRange + ']',
        rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
        rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
        rsUpper = '[' + rsUpperRange + ']',
        rsZWJ = '\\u200d';

    /** Used to compose unicode regexes. */
    var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
        rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
        rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
        rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
        reOptMod = rsModifier + '?',
        rsOptVar = '[' + rsVarRange + ']?',
        rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
        rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
        rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
        rsSeq = rsOptVar + reOptMod + rsOptJoin,
        rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;

    /** Used to match complex or compound words. */
    var reUnicodeWord = RegExp([
      rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
      rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
      rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
      rsUpper + '+' + rsOptContrUpper,
      rsOrdUpper,
      rsOrdLower,
      rsDigits,
      rsEmoji
    ].join('|'), 'g');

    /**
     * Splits a Unicode `string` into an array of its words.
     *
     * @private
     * @param {string} The string to inspect.
     * @returns {Array} Returns the words of `string`.
     */
    function unicodeWords(string) {
      return string.match(reUnicodeWord) || [];
    }

    var _unicodeWords = unicodeWords;

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString_1(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return _hasUnicodeWord(string) ? _unicodeWords(string) : _asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    var words_1 = words;

    /** Used to compose unicode capture groups. */
    var rsApos$1 = "['\u2019]";

    /** Used to match apostrophes. */
    var reApos = RegExp(rsApos$1, 'g');

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return _arrayReduce(words_1(deburr_1(string).replace(reApos, '')), callback, '');
      };
    }

    var _createCompounder = createCompounder;

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = _createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    var kebabCase_1 = kebabCase;

    var css$1 = picostyle(h);
    var Fieldset = css$1('fieldset')({
      border: '0',
      padding: '0',
      margin: '0',
      'min-width': '0'
    });
    var Header = css$1('div')({
      display: 'flex',
      marginTop: '20px'
    });
    var Label = css$1('button')(function (props) {
      return {
        display: 'flex',
        alignItems: 'center',
        cursor: 'pointer',
        border: 'none',
        ':focus': {
          outline: 'none'
        },
        '> svg': __assign({
          transition: 'transform .2s',
          marginRight: '7px',
          transform: 'rotate(90deg)'
        }, props['aria-expanded'] && {
          transform: 'rotate(180deg)'
        })
      };
    });
    var LabelText = css$1('span')({
      borderBottom: '1px dotted',
      ':hover': {
        borderBottom: '1px solid'
      }
    });
    var Action = css$1('div')({
      marginLeft: 'auto',
      paddingLeft: '10px',
      fontSize: '14px',
      color: '#989797'
    });
    var Description = css$1('div')({
      fontSize: '14px',
      marginTop: '20px',
      paddingLeft: '15px'
    });
    function Accordion(_a) {
      var label = _a.label,
          description = _a.description,
          children = _a.children,
          expanded = _a.expanded,
          onClick = _a.onClick;
      var pairId = kebabCase_1(label);
      return h("div", null, h(Fieldset, null, h("legend", {
        "class": "vh"
      }, label), h(Header, null, h(Label, {
        id: pairId + "-label",
        "class": "cookie-consent-focusable",
        onClick: onClick,
        "aria-expanded": expanded,
        "aria-controls": pairId
      }, h(Caret, null), h(LabelText, null, label)), h(Action, null, children))), expanded && h(Description, {
        role: "region",
        id: pairId,
        "aria-labelledby": pairId + "-label"
      }, description));
    }

    var css$2 = picostyle(h);
    var Wrap = css$2('div')({
      display: 'grid',
      gridTemplateColumns: '1fr 1fr',
      gridColumnGap: '15px',
      '@media (max-width: 600px)': {
        gridColumnGap: '5px'
      }
    });
    var LabelDisguisedAsButton = css$2('label')(ButtonStyles);
    function Switch(_a) {
      var id = _a.id,
          value = _a.value,
          changeValue = _a.changeValue,
          enableErrorState = _a.enableErrorState,
          onRef = _a.onRef,
          offRef = _a.offRef;

      function onChange(event) {
        changeValue(event.target.value === 'on');
      }

      return h(Wrap, null, h(LabelDisguisedAsButton, {
        variant: value === true ? 'primary' : 'secondary',
        "class": "focus-within",
        error: enableErrorState && value == null,
        ref: onRef,
        size: "small"
      }, h("input", {
        type: "radio",
        checked: value === true,
        onChange: onChange,
        name: id,
        value: 'on',
        "class": "vh"
      }), "On"), h(LabelDisguisedAsButton, {
        variant: value === false ? 'primary' : 'secondary',
        "class": "focus-within",
        error: enableErrorState && value == null,
        ref: offRef,
        size: "small"
      }, h("input", {
        type: "radio",
        checked: value === false,
        onChange: onChange,
        name: id,
        value: 'off',
        "class": "vh"
      }), "Off"));
    }

    var css$3 = picostyle(h);
    var Wrap$1 = css$3('span')({
      display: 'inline-block',
      backgroundColor: '#ec7965',
      borderRadius: '3px',
      padding: '8px 20px 6px',
      marginBottom: '20px',
      textAlign: 'center',
      fontSize: '14px'
    });
    function Error$1(_a) {
      var children = _a.children;
      return h(Wrap$1, null, children);
    }

    var fails = function (exec) {
      try {
        return !!exec();
      } catch (error) {
        return true;
      }
    };

    var toString$1 = {}.toString;

    var classofRaw = function (it) {
      return toString$1.call(it).slice(8, -1);
    };

    var split = ''.split;

    // fallback for non-array-like ES3 and non-enumerable old V8 strings
    var indexedObject = fails(function () {
      // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
      // eslint-disable-next-line no-prototype-builtins
      return !Object('z').propertyIsEnumerable(0);
    }) ? function (it) {
      return classofRaw(it) == 'String' ? split.call(it, '') : Object(it);
    } : Object;

    // `RequireObjectCoercible` abstract operation
    // https://tc39.github.io/ecma262/#sec-requireobjectcoercible
    var requireObjectCoercible = function (it) {
      if (it == undefined) throw TypeError("Can't call method on " + it);
      return it;
    };

    // toObject with fallback for non-array-like ES3 strings



    var toIndexedObject = function (it) {
      return indexedObject(requireObjectCoercible(it));
    };

    var check = function (it) {
      return it && it.Math == Math && it;
    };

    // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
    var global_1 =
      // eslint-disable-next-line no-undef
      check(typeof globalThis == 'object' && globalThis) ||
      check(typeof window == 'object' && window) ||
      check(typeof self == 'object' && self) ||
      check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
      // eslint-disable-next-line no-new-func
      Function('return this')();

    // Thank's IE8 for his funny defineProperty
    var descriptors = !fails(function () {
      return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
    });

    var isObject = function (it) {
      return typeof it === 'object' ? it !== null : typeof it === 'function';
    };

    var document$1 = global_1.document;
    // typeof document.createElement is 'object' in old IE
    var EXISTS = isObject(document$1) && isObject(document$1.createElement);

    var documentCreateElement = function (it) {
      return EXISTS ? document$1.createElement(it) : {};
    };

    // Thank's IE8 for his funny defineProperty
    var ie8DomDefine = !descriptors && !fails(function () {
      return Object.defineProperty(documentCreateElement('div'), 'a', {
        get: function () { return 7; }
      }).a != 7;
    });

    var anObject = function (it) {
      if (!isObject(it)) {
        throw TypeError(String(it) + ' is not an object');
      } return it;
    };

    // `ToPrimitive` abstract operation
    // https://tc39.github.io/ecma262/#sec-toprimitive
    // instead of the ES6 spec version, we didn't implement @@toPrimitive case
    // and the second argument - flag - preferred type is a string
    var toPrimitive = function (input, PREFERRED_STRING) {
      if (!isObject(input)) return input;
      var fn, val;
      if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
      if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
      if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
      throw TypeError("Can't convert object to primitive value");
    };

    var nativeDefineProperty = Object.defineProperty;

    // `Object.defineProperty` method
    // https://tc39.github.io/ecma262/#sec-object.defineproperty
    var f$2 = descriptors ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
      anObject(O);
      P = toPrimitive(P, true);
      anObject(Attributes);
      if (ie8DomDefine) try {
        return nativeDefineProperty(O, P, Attributes);
      } catch (error) { /* empty */ }
      if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
      if ('value' in Attributes) O[P] = Attributes.value;
      return O;
    };

    var objectDefineProperty = {
    	f: f$2
    };

    var createPropertyDescriptor = function (bitmap, value) {
      return {
        enumerable: !(bitmap & 1),
        configurable: !(bitmap & 2),
        writable: !(bitmap & 4),
        value: value
      };
    };

    var createNonEnumerableProperty = descriptors ? function (object, key, value) {
      return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
    } : function (object, key, value) {
      object[key] = value;
      return object;
    };

    var setGlobal = function (key, value) {
      try {
        createNonEnumerableProperty(global_1, key, value);
      } catch (error) {
        global_1[key] = value;
      } return value;
    };

    var SHARED = '__core-js_shared__';
    var store = global_1[SHARED] || setGlobal(SHARED, {});

    var sharedStore = store;

    var shared = createCommonjsModule(function (module) {
    (module.exports = function (key, value) {
      return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});
    })('versions', []).push({
      version: '3.6.5',
      mode: 'global',
      copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
    });
    });

    var hasOwnProperty$1 = {}.hasOwnProperty;

    var has = function (it, key) {
      return hasOwnProperty$1.call(it, key);
    };

    var id = 0;
    var postfix = Math.random();

    var uid = function (key) {
      return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
    };

    var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {
      // Chrome 38 Symbol has incorrect toString conversion
      // eslint-disable-next-line no-undef
      return !String(Symbol());
    });

    var useSymbolAsUid = nativeSymbol
      // eslint-disable-next-line no-undef
      && !Symbol.sham
      // eslint-disable-next-line no-undef
      && typeof Symbol.iterator == 'symbol';

    var WellKnownSymbolsStore = shared('wks');
    var Symbol$2 = global_1.Symbol;
    var createWellKnownSymbol = useSymbolAsUid ? Symbol$2 : Symbol$2 && Symbol$2.withoutSetter || uid;

    var wellKnownSymbol = function (name) {
      if (!has(WellKnownSymbolsStore, name)) {
        if (nativeSymbol && has(Symbol$2, name)) WellKnownSymbolsStore[name] = Symbol$2[name];
        else WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
      } return WellKnownSymbolsStore[name];
    };

    var ceil = Math.ceil;
    var floor = Math.floor;

    // `ToInteger` abstract operation
    // https://tc39.github.io/ecma262/#sec-tointeger
    var toInteger = function (argument) {
      return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
    };

    var min = Math.min;

    // `ToLength` abstract operation
    // https://tc39.github.io/ecma262/#sec-tolength
    var toLength = function (argument) {
      return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
    };

    var max = Math.max;
    var min$1 = Math.min;

    // Helper for a popular repeating case of the spec:
    // Let integer be ? ToInteger(index).
    // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
    var toAbsoluteIndex = function (index, length) {
      var integer = toInteger(index);
      return integer < 0 ? max(integer + length, 0) : min$1(integer, length);
    };

    // `Array.prototype.{ indexOf, includes }` methods implementation
    var createMethod = function (IS_INCLUDES) {
      return function ($this, el, fromIndex) {
        var O = toIndexedObject($this);
        var length = toLength(O.length);
        var index = toAbsoluteIndex(fromIndex, length);
        var value;
        // Array#includes uses SameValueZero equality algorithm
        // eslint-disable-next-line no-self-compare
        if (IS_INCLUDES && el != el) while (length > index) {
          value = O[index++];
          // eslint-disable-next-line no-self-compare
          if (value != value) return true;
        // Array#indexOf ignores holes, Array#includes - not
        } else for (;length > index; index++) {
          if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
        } return !IS_INCLUDES && -1;
      };
    };

    var arrayIncludes = {
      // `Array.prototype.includes` method
      // https://tc39.github.io/ecma262/#sec-array.prototype.includes
      includes: createMethod(true),
      // `Array.prototype.indexOf` method
      // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
      indexOf: createMethod(false)
    };

    var hiddenKeys = {};

    var indexOf = arrayIncludes.indexOf;


    var objectKeysInternal = function (object, names) {
      var O = toIndexedObject(object);
      var i = 0;
      var result = [];
      var key;
      for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
      // Don't enum bug & hidden keys
      while (names.length > i) if (has(O, key = names[i++])) {
        ~indexOf(result, key) || result.push(key);
      }
      return result;
    };

    // IE8- don't enum bug keys
    var enumBugKeys = [
      'constructor',
      'hasOwnProperty',
      'isPrototypeOf',
      'propertyIsEnumerable',
      'toLocaleString',
      'toString',
      'valueOf'
    ];

    // `Object.keys` method
    // https://tc39.github.io/ecma262/#sec-object.keys
    var objectKeys = Object.keys || function keys(O) {
      return objectKeysInternal(O, enumBugKeys);
    };

    // `Object.defineProperties` method
    // https://tc39.github.io/ecma262/#sec-object.defineproperties
    var objectDefineProperties = descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
      anObject(O);
      var keys = objectKeys(Properties);
      var length = keys.length;
      var index = 0;
      var key;
      while (length > index) objectDefineProperty.f(O, key = keys[index++], Properties[key]);
      return O;
    };

    var path = global_1;

    var aFunction = function (variable) {
      return typeof variable == 'function' ? variable : undefined;
    };

    var getBuiltIn = function (namespace, method) {
      return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global_1[namespace])
        : path[namespace] && path[namespace][method] || global_1[namespace] && global_1[namespace][method];
    };

    var html = getBuiltIn('document', 'documentElement');

    var keys = shared('keys');

    var sharedKey = function (key) {
      return keys[key] || (keys[key] = uid(key));
    };

    var GT = '>';
    var LT = '<';
    var PROTOTYPE = 'prototype';
    var SCRIPT = 'script';
    var IE_PROTO = sharedKey('IE_PROTO');

    var EmptyConstructor = function () { /* empty */ };

    var scriptTag = function (content) {
      return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
    };

    // Create object with fake `null` prototype: use ActiveX Object with cleared prototype
    var NullProtoObjectViaActiveX = function (activeXDocument) {
      activeXDocument.write(scriptTag(''));
      activeXDocument.close();
      var temp = activeXDocument.parentWindow.Object;
      activeXDocument = null; // avoid memory leak
      return temp;
    };

    // Create object with fake `null` prototype: use iframe Object with cleared prototype
    var NullProtoObjectViaIFrame = function () {
      // Thrash, waste and sodomy: IE GC bug
      var iframe = documentCreateElement('iframe');
      var JS = 'java' + SCRIPT + ':';
      var iframeDocument;
      iframe.style.display = 'none';
      html.appendChild(iframe);
      // https://github.com/zloirock/core-js/issues/475
      iframe.src = String(JS);
      iframeDocument = iframe.contentWindow.document;
      iframeDocument.open();
      iframeDocument.write(scriptTag('document.F=Object'));
      iframeDocument.close();
      return iframeDocument.F;
    };

    // Check for document.domain and active x support
    // No need to use active x approach when document.domain is not set
    // see https://github.com/es-shims/es5-shim/issues/150
    // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
    // avoid IE GC bug
    var activeXDocument;
    var NullProtoObject = function () {
      try {
        /* global ActiveXObject */
        activeXDocument = document.domain && new ActiveXObject('htmlfile');
      } catch (error) { /* ignore */ }
      NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
      var length = enumBugKeys.length;
      while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
      return NullProtoObject();
    };

    hiddenKeys[IE_PROTO] = true;

    // `Object.create` method
    // https://tc39.github.io/ecma262/#sec-object.create
    var objectCreate = Object.create || function create(O, Properties) {
      var result;
      if (O !== null) {
        EmptyConstructor[PROTOTYPE] = anObject(O);
        result = new EmptyConstructor();
        EmptyConstructor[PROTOTYPE] = null;
        // add "__proto__" for Object.getPrototypeOf polyfill
        result[IE_PROTO] = O;
      } else result = NullProtoObject();
      return Properties === undefined ? result : objectDefineProperties(result, Properties);
    };

    var UNSCOPABLES = wellKnownSymbol('unscopables');
    var ArrayPrototype = Array.prototype;

    // Array.prototype[@@unscopables]
    // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
    if (ArrayPrototype[UNSCOPABLES] == undefined) {
      objectDefineProperty.f(ArrayPrototype, UNSCOPABLES, {
        configurable: true,
        value: objectCreate(null)
      });
    }

    // add a key to Array.prototype[@@unscopables]
    var addToUnscopables = function (key) {
      ArrayPrototype[UNSCOPABLES][key] = true;
    };

    var iterators = {};

    var functionToString = Function.toString;

    // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper
    if (typeof sharedStore.inspectSource != 'function') {
      sharedStore.inspectSource = function (it) {
        return functionToString.call(it);
      };
    }

    var inspectSource = sharedStore.inspectSource;

    var WeakMap = global_1.WeakMap;

    var nativeWeakMap = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));

    var WeakMap$1 = global_1.WeakMap;
    var set, get, has$1;

    var enforce = function (it) {
      return has$1(it) ? get(it) : set(it, {});
    };

    var getterFor = function (TYPE) {
      return function (it) {
        var state;
        if (!isObject(it) || (state = get(it)).type !== TYPE) {
          throw TypeError('Incompatible receiver, ' + TYPE + ' required');
        } return state;
      };
    };

    if (nativeWeakMap) {
      var store$1 = new WeakMap$1();
      var wmget = store$1.get;
      var wmhas = store$1.has;
      var wmset = store$1.set;
      set = function (it, metadata) {
        wmset.call(store$1, it, metadata);
        return metadata;
      };
      get = function (it) {
        return wmget.call(store$1, it) || {};
      };
      has$1 = function (it) {
        return wmhas.call(store$1, it);
      };
    } else {
      var STATE = sharedKey('state');
      hiddenKeys[STATE] = true;
      set = function (it, metadata) {
        createNonEnumerableProperty(it, STATE, metadata);
        return metadata;
      };
      get = function (it) {
        return has(it, STATE) ? it[STATE] : {};
      };
      has$1 = function (it) {
        return has(it, STATE);
      };
    }

    var internalState = {
      set: set,
      get: get,
      has: has$1,
      enforce: enforce,
      getterFor: getterFor
    };

    var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

    // Nashorn ~ JDK8 bug
    var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

    // `Object.prototype.propertyIsEnumerable` method implementation
    // https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
    var f$3 = NASHORN_BUG ? function propertyIsEnumerable(V) {
      var descriptor = getOwnPropertyDescriptor(this, V);
      return !!descriptor && descriptor.enumerable;
    } : nativePropertyIsEnumerable;

    var objectPropertyIsEnumerable = {
    	f: f$3
    };

    var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

    // `Object.getOwnPropertyDescriptor` method
    // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
    var f$4 = descriptors ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
      O = toIndexedObject(O);
      P = toPrimitive(P, true);
      if (ie8DomDefine) try {
        return nativeGetOwnPropertyDescriptor(O, P);
      } catch (error) { /* empty */ }
      if (has(O, P)) return createPropertyDescriptor(!objectPropertyIsEnumerable.f.call(O, P), O[P]);
    };

    var objectGetOwnPropertyDescriptor = {
    	f: f$4
    };

    var redefine = createCommonjsModule(function (module) {
    var getInternalState = internalState.get;
    var enforceInternalState = internalState.enforce;
    var TEMPLATE = String(String).split('String');

    (module.exports = function (O, key, value, options) {
      var unsafe = options ? !!options.unsafe : false;
      var simple = options ? !!options.enumerable : false;
      var noTargetGet = options ? !!options.noTargetGet : false;
      if (typeof value == 'function') {
        if (typeof key == 'string' && !has(value, 'name')) createNonEnumerableProperty(value, 'name', key);
        enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
      }
      if (O === global_1) {
        if (simple) O[key] = value;
        else setGlobal(key, value);
        return;
      } else if (!unsafe) {
        delete O[key];
      } else if (!noTargetGet && O[key]) {
        simple = true;
      }
      if (simple) O[key] = value;
      else createNonEnumerableProperty(O, key, value);
    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
    })(Function.prototype, 'toString', function toString() {
      return typeof this == 'function' && getInternalState(this).source || inspectSource(this);
    });
    });

    var hiddenKeys$1 = enumBugKeys.concat('length', 'prototype');

    // `Object.getOwnPropertyNames` method
    // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
    var f$5 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
      return objectKeysInternal(O, hiddenKeys$1);
    };

    var objectGetOwnPropertyNames = {
    	f: f$5
    };

    var f$6 = Object.getOwnPropertySymbols;

    var objectGetOwnPropertySymbols = {
    	f: f$6
    };

    // all object keys, includes non-enumerable and symbols
    var ownKeys = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
      var keys = objectGetOwnPropertyNames.f(anObject(it));
      var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
      return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
    };

    var copyConstructorProperties = function (target, source) {
      var keys = ownKeys(source);
      var defineProperty = objectDefineProperty.f;
      var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
      }
    };

    var replacement = /#|\.prototype\./;

    var isForced = function (feature, detection) {
      var value = data[normalize(feature)];
      return value == POLYFILL ? true
        : value == NATIVE ? false
        : typeof detection == 'function' ? fails(detection)
        : !!detection;
    };

    var normalize = isForced.normalize = function (string) {
      return String(string).replace(replacement, '.').toLowerCase();
    };

    var data = isForced.data = {};
    var NATIVE = isForced.NATIVE = 'N';
    var POLYFILL = isForced.POLYFILL = 'P';

    var isForced_1 = isForced;

    var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;






    /*
      options.target      - name of the target object
      options.global      - target is the global object
      options.stat        - export as static methods of target
      options.proto       - export as prototype methods of target
      options.real        - real prototype method for the `pure` version
      options.forced      - export even if the native feature is available
      options.bind        - bind methods to the target, required for the `pure` version
      options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
      options.unsafe      - use the simple assignment of property instead of delete + defineProperty
      options.sham        - add a flag to not completely full polyfills
      options.enumerable  - export as enumerable property
      options.noTargetGet - prevent calling a getter on target
    */
    var _export = function (options, source) {
      var TARGET = options.target;
      var GLOBAL = options.global;
      var STATIC = options.stat;
      var FORCED, target, key, targetProperty, sourceProperty, descriptor;
      if (GLOBAL) {
        target = global_1;
      } else if (STATIC) {
        target = global_1[TARGET] || setGlobal(TARGET, {});
      } else {
        target = (global_1[TARGET] || {}).prototype;
      }
      if (target) for (key in source) {
        sourceProperty = source[key];
        if (options.noTargetGet) {
          descriptor = getOwnPropertyDescriptor$1(target, key);
          targetProperty = descriptor && descriptor.value;
        } else targetProperty = target[key];
        FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
        // contained in target
        if (!FORCED && targetProperty !== undefined) {
          if (typeof sourceProperty === typeof targetProperty) continue;
          copyConstructorProperties(sourceProperty, targetProperty);
        }
        // add a flag to not completely full polyfills
        if (options.sham || (targetProperty && targetProperty.sham)) {
          createNonEnumerableProperty(sourceProperty, 'sham', true);
        }
        // extend global
        redefine(target, key, sourceProperty, options);
      }
    };

    // `ToObject` abstract operation
    // https://tc39.github.io/ecma262/#sec-toobject
    var toObject = function (argument) {
      return Object(requireObjectCoercible(argument));
    };

    var correctPrototypeGetter = !fails(function () {
      function F() { /* empty */ }
      F.prototype.constructor = null;
      return Object.getPrototypeOf(new F()) !== F.prototype;
    });

    var IE_PROTO$1 = sharedKey('IE_PROTO');
    var ObjectPrototype = Object.prototype;

    // `Object.getPrototypeOf` method
    // https://tc39.github.io/ecma262/#sec-object.getprototypeof
    var objectGetPrototypeOf = correctPrototypeGetter ? Object.getPrototypeOf : function (O) {
      O = toObject(O);
      if (has(O, IE_PROTO$1)) return O[IE_PROTO$1];
      if (typeof O.constructor == 'function' && O instanceof O.constructor) {
        return O.constructor.prototype;
      } return O instanceof Object ? ObjectPrototype : null;
    };

    var ITERATOR = wellKnownSymbol('iterator');
    var BUGGY_SAFARI_ITERATORS = false;

    var returnThis = function () { return this; };

    // `%IteratorPrototype%` object
    // https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
    var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

    if ([].keys) {
      arrayIterator = [].keys();
      // Safari 8 has buggy iterators w/o `next`
      if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
      else {
        PrototypeOfArrayIteratorPrototype = objectGetPrototypeOf(objectGetPrototypeOf(arrayIterator));
        if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
      }
    }

    if (IteratorPrototype == undefined) IteratorPrototype = {};

    // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
    if (!has(IteratorPrototype, ITERATOR)) {
      createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
    }

    var iteratorsCore = {
      IteratorPrototype: IteratorPrototype,
      BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
    };

    var defineProperty = objectDefineProperty.f;



    var TO_STRING_TAG = wellKnownSymbol('toStringTag');

    var setToStringTag = function (it, TAG, STATIC) {
      if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
        defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
      }
    };

    var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;





    var returnThis$1 = function () { return this; };

    var createIteratorConstructor = function (IteratorConstructor, NAME, next) {
      var TO_STRING_TAG = NAME + ' Iterator';
      IteratorConstructor.prototype = objectCreate(IteratorPrototype$1, { next: createPropertyDescriptor(1, next) });
      setToStringTag(IteratorConstructor, TO_STRING_TAG, false);
      iterators[TO_STRING_TAG] = returnThis$1;
      return IteratorConstructor;
    };

    var aPossiblePrototype = function (it) {
      if (!isObject(it) && it !== null) {
        throw TypeError("Can't set " + String(it) + ' as a prototype');
      } return it;
    };

    // `Object.setPrototypeOf` method
    // https://tc39.github.io/ecma262/#sec-object.setprototypeof
    // Works with __proto__ only. Old v8 can't work with null proto objects.
    /* eslint-disable no-proto */
    var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
      var CORRECT_SETTER = false;
      var test = {};
      var setter;
      try {
        setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
        setter.call(test, []);
        CORRECT_SETTER = test instanceof Array;
      } catch (error) { /* empty */ }
      return function setPrototypeOf(O, proto) {
        anObject(O);
        aPossiblePrototype(proto);
        if (CORRECT_SETTER) setter.call(O, proto);
        else O.__proto__ = proto;
        return O;
      };
    }() : undefined);

    var IteratorPrototype$2 = iteratorsCore.IteratorPrototype;
    var BUGGY_SAFARI_ITERATORS$1 = iteratorsCore.BUGGY_SAFARI_ITERATORS;
    var ITERATOR$1 = wellKnownSymbol('iterator');
    var KEYS = 'keys';
    var VALUES = 'values';
    var ENTRIES = 'entries';

    var returnThis$2 = function () { return this; };

    var defineIterator = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
      createIteratorConstructor(IteratorConstructor, NAME, next);

      var getIterationMethod = function (KIND) {
        if (KIND === DEFAULT && defaultIterator) return defaultIterator;
        if (!BUGGY_SAFARI_ITERATORS$1 && KIND in IterablePrototype) return IterablePrototype[KIND];
        switch (KIND) {
          case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
          case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
          case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
        } return function () { return new IteratorConstructor(this); };
      };

      var TO_STRING_TAG = NAME + ' Iterator';
      var INCORRECT_VALUES_NAME = false;
      var IterablePrototype = Iterable.prototype;
      var nativeIterator = IterablePrototype[ITERATOR$1]
        || IterablePrototype['@@iterator']
        || DEFAULT && IterablePrototype[DEFAULT];
      var defaultIterator = !BUGGY_SAFARI_ITERATORS$1 && nativeIterator || getIterationMethod(DEFAULT);
      var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
      var CurrentIteratorPrototype, methods, KEY;

      // fix native
      if (anyNativeIterator) {
        CurrentIteratorPrototype = objectGetPrototypeOf(anyNativeIterator.call(new Iterable()));
        if (IteratorPrototype$2 !== Object.prototype && CurrentIteratorPrototype.next) {
          if (objectGetPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype$2) {
            if (objectSetPrototypeOf) {
              objectSetPrototypeOf(CurrentIteratorPrototype, IteratorPrototype$2);
            } else if (typeof CurrentIteratorPrototype[ITERATOR$1] != 'function') {
              createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR$1, returnThis$2);
            }
          }
          // Set @@toStringTag to native iterators
          setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);
        }
      }

      // fix Array#{values, @@iterator}.name in V8 / FF
      if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
        INCORRECT_VALUES_NAME = true;
        defaultIterator = function values() { return nativeIterator.call(this); };
      }

      // define iterator
      if (IterablePrototype[ITERATOR$1] !== defaultIterator) {
        createNonEnumerableProperty(IterablePrototype, ITERATOR$1, defaultIterator);
      }
      iterators[NAME] = defaultIterator;

      // export additional methods
      if (DEFAULT) {
        methods = {
          values: getIterationMethod(VALUES),
          keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
          entries: getIterationMethod(ENTRIES)
        };
        if (FORCED) for (KEY in methods) {
          if (BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
            redefine(IterablePrototype, KEY, methods[KEY]);
          }
        } else _export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS$1 || INCORRECT_VALUES_NAME }, methods);
      }

      return methods;
    };

    var ARRAY_ITERATOR = 'Array Iterator';
    var setInternalState = internalState.set;
    var getInternalState = internalState.getterFor(ARRAY_ITERATOR);

    // `Array.prototype.entries` method
    // https://tc39.github.io/ecma262/#sec-array.prototype.entries
    // `Array.prototype.keys` method
    // https://tc39.github.io/ecma262/#sec-array.prototype.keys
    // `Array.prototype.values` method
    // https://tc39.github.io/ecma262/#sec-array.prototype.values
    // `Array.prototype[@@iterator]` method
    // https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
    // `CreateArrayIterator` internal method
    // https://tc39.github.io/ecma262/#sec-createarrayiterator
    defineIterator(Array, 'Array', function (iterated, kind) {
      setInternalState(this, {
        type: ARRAY_ITERATOR,
        target: toIndexedObject(iterated), // target
        index: 0,                          // next index
        kind: kind                         // kind
      });
    // `%ArrayIteratorPrototype%.next` method
    // https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
    }, function () {
      var state = getInternalState(this);
      var target = state.target;
      var kind = state.kind;
      var index = state.index++;
      if (!target || index >= target.length) {
        state.target = undefined;
        return { value: undefined, done: true };
      }
      if (kind == 'keys') return { value: index, done: false };
      if (kind == 'values') return { value: target[index], done: false };
      return { value: [index, target[index]], done: false };
    }, 'values');

    // argumentsList[@@iterator] is %ArrayProto_values%
    // https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
    // https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
    iterators.Arguments = iterators.Array;

    // https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
    addToUnscopables('keys');
    addToUnscopables('values');
    addToUnscopables('entries');

    var ITERATOR$2 = wellKnownSymbol('iterator');
    var ArrayPrototype$1 = Array.prototype;

    // check on default Array iterator
    var isArrayIteratorMethod = function (it) {
      return it !== undefined && (iterators.Array === it || ArrayPrototype$1[ITERATOR$2] === it);
    };

    var aFunction$1 = function (it) {
      if (typeof it != 'function') {
        throw TypeError(String(it) + ' is not a function');
      } return it;
    };

    // optional / simple context binding
    var functionBindContext = function (fn, that, length) {
      aFunction$1(fn);
      if (that === undefined) return fn;
      switch (length) {
        case 0: return function () {
          return fn.call(that);
        };
        case 1: return function (a) {
          return fn.call(that, a);
        };
        case 2: return function (a, b) {
          return fn.call(that, a, b);
        };
        case 3: return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
      }
      return function (/* ...args */) {
        return fn.apply(that, arguments);
      };
    };

    var TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');
    var test = {};

    test[TO_STRING_TAG$1] = 'z';

    var toStringTagSupport = String(test) === '[object z]';

    var TO_STRING_TAG$2 = wellKnownSymbol('toStringTag');
    // ES3 wrong here
    var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

    // fallback for IE11 Script Access Denied error
    var tryGet = function (it, key) {
      try {
        return it[key];
      } catch (error) { /* empty */ }
    };

    // getting tag from ES6+ `Object.prototype.toString`
    var classof = toStringTagSupport ? classofRaw : function (it) {
      var O, tag, result;
      return it === undefined ? 'Undefined' : it === null ? 'Null'
        // @@toStringTag case
        : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG$2)) == 'string' ? tag
        // builtinTag case
        : CORRECT_ARGUMENTS ? classofRaw(O)
        // ES3 arguments fallback
        : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
    };

    var ITERATOR$3 = wellKnownSymbol('iterator');

    var getIteratorMethod = function (it) {
      if (it != undefined) return it[ITERATOR$3]
        || it['@@iterator']
        || iterators[classof(it)];
    };

    // call something on iterator step with safe closing on error
    var callWithSafeIterationClosing = function (iterator, fn, value, ENTRIES) {
      try {
        return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
      // 7.4.6 IteratorClose(iterator, completion)
      } catch (error) {
        var returnMethod = iterator['return'];
        if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
        throw error;
      }
    };

    var iterate_1 = createCommonjsModule(function (module) {
    var Result = function (stopped, result) {
      this.stopped = stopped;
      this.result = result;
    };

    var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {
      var boundFunction = functionBindContext(fn, that, AS_ENTRIES ? 2 : 1);
      var iterator, iterFn, index, length, result, next, step;

      if (IS_ITERATOR) {
        iterator = iterable;
      } else {
        iterFn = getIteratorMethod(iterable);
        if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
        // optimisation for array iterators
        if (isArrayIteratorMethod(iterFn)) {
          for (index = 0, length = toLength(iterable.length); length > index; index++) {
            result = AS_ENTRIES
              ? boundFunction(anObject(step = iterable[index])[0], step[1])
              : boundFunction(iterable[index]);
            if (result && result instanceof Result) return result;
          } return new Result(false);
        }
        iterator = iterFn.call(iterable);
      }

      next = iterator.next;
      while (!(step = next.call(iterator)).done) {
        result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);
        if (typeof result == 'object' && result && result instanceof Result) return result;
      } return new Result(false);
    };

    iterate.stop = function (result) {
      return new Result(true, result);
    };
    });

    var createProperty = function (object, key, value) {
      var propertyKey = toPrimitive(key);
      if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));
      else object[propertyKey] = value;
    };

    // `Object.fromEntries` method
    // https://github.com/tc39/proposal-object-from-entries
    _export({ target: 'Object', stat: true }, {
      fromEntries: function fromEntries(iterable) {
        var obj = {};
        iterate_1(iterable, function (k, v) {
          createProperty(obj, k, v);
        }, undefined, true);
        return obj;
      }
    });

    path.Object.fromEntries;

    function getCookieDomain(hostname) {
      if (hostname === void 0) {
        hostname = window.location.hostname;
      }

      var parts = hostname.split('.');
      var tldParts = parts.splice(parts.length - 2, parts.length);
      var tld = tldParts.join('.');
      if (tld === 'localhost') return 'localhost';
      return "." + tld;
    }

    function localStorageCache(key, callback) {
      var _a, _b, _c;

      return __awaiter(this, void 0, void 0, function () {
        var cachedValue;
        return __generator(this, function (_d) {
          switch (_d.label) {
            case 0:
              cachedValue = ((_a = window.localStorage) === null || _a === void 0 ? void 0 : _a.getItem(key)) || ((_b = window.sessionStorage) === null || _b === void 0 ? void 0 : _b.getItem(key));
              if (!!cachedValue) return [3
              /*break*/
              , 2];
              return [4
              /*yield*/
              , callback()];

            case 1:
              cachedValue = _d.sent();
              (_c = window.localStorage) === null || _c === void 0 ? void 0 : _c.setItem(key, cachedValue);
              _d.label = 2;

            case 2:
              return [2
              /*return*/
              , cachedValue];
          }
        });
      });
    }

    var CONSENT_COOKIE = 'gtm_cookie_consent';
    function fetchCookieConsentMode() {
      return __awaiter(this, void 0, void 0, function () {
        var consentMode;

        var _this = this;

        return __generator(this, function (_a) {
          switch (_a.label) {
            case 0:
              return [4
              /*yield*/
              , localStorageCache('cookie-consent-mode', function () {
                return __awaiter(_this, void 0, void 0, function () {
                  var response;
                  return __generator(this, function (_a) {
                    switch (_a.label) {
                      case 0:
                        return [4
                        /*yield*/
                        , intercom.get('/cookie_consent_mode')];

                      case 1:
                        response = _a.sent();
                        return [2
                        /*return*/
                        , response.error ? 'consent-required' : response.data.cookie_consent_mode];
                    }
                  });
                });
              })];

            case 1:
              consentMode = _a.sent();

              if (consentMode === 'consent-assumed') {
                window.dataLayer.push({
                  'gtm-js.restricted-data-processing': true
                });
              }

              return [2
              /*return*/
              , consentMode];
          }
        });
      });
    }
    function getCookieConsentPreference(mode) {
      var enableAll = {
        advertising: true,
        marketing: true,
        analytics: true,
        performance: true
      };

      if (mode === 'no-consent') {
        setCookieConsentPreference(enableAll);
        return enableAll;
      }

      var cookie = js_cookie.get(CONSENT_COOKIE);

      if (cookie === undefined) {
        if (mode === 'consent-assumed') {
          setCookieConsentPreference(enableAll);
          return enableAll;
        }

        return null;
      }

      return deserializeConsentCookie(cookie);
    }
    function setCookieConsentPreference(value) {
      var secure = apiEndpoint().startsWith('https:');
      js_cookie.set(CONSENT_COOKIE, serializeConsentCookie(value), {
        expires: 180,
        domain: getCookieDomain(),
        samesite: secure ? 'none' : 'lax',
        secure: secure,
        path: '/'
      });
    }
    function getConsentTimeStamp() {
      var cookie = js_cookie.get(CONSENT_COOKIE);
      if (!cookie) return null;
      var consentTimeStamp = Number(cookie.split('+').slice(-1)[0]);
      if (isNaN(consentTimeStamp)) return null;
      return consentTimeStamp;
    }
    function getCookieConsentPropertiesForMetric() {
      var _a;

      var cookie = js_cookie.get(CONSENT_COOKIE);
      var cookieConsent = cookie ? deserializeConsentCookie(cookie) : {};
      var cookieConsentMode = ((_a = window.localStorage) === null || _a === void 0 ? void 0 : _a.getItem('cookie-consent-mode')) || 'consent-required';
      return __assign({
        cookieConsentMode: cookieConsentMode
      }, cookieConsent);
    }

    function serializeConsentCookie(value) {
      return __spreadArrays(['essential'], Object.entries(value).map(function (_a) {
        var cookieType = _a[0],
            enabled = _a[1];
        return enabled && cookieType;
      }).filter(Boolean), [new Date().getTime()]).join('+');
    }

    function deserializeConsentCookie(cookieValue) {
      var _a = Object.fromEntries(cookieValue.split('+').map(function (bucket) {
        return [bucket, true];
      })),
          advertising = _a.advertising,
          marketing = _a.marketing,
          analytics = _a.analytics,
          performance = _a.performance;

      return {
        advertising: !!advertising,
        analytics: !!analytics,
        marketing: !!marketing,
        performance: !!performance
      };
    }

    var ConsentModeContext = M('consent-required');

    var css$4 = picostyle(h);
    var Wrap$2 = css$4('div')({});
    var Heading = css$4('h1')({
      fontSize: '26px',
      margin: '0 0 10px',
      textAlign: 'center'
    });
    var SubHeading = css$4('h3')({
      fontSize: '16px',
      fontWeight: 'normal',
      margin: '0 auto 40px',
      textAlign: 'center',
      maxWidth: '330px'
    });
    var Cta = css$4('div')({
      textAlign: 'center',
      marginTop: '50px',
      '> button': {
        paddingLeft: '50px',
        paddingRight: '50px'
      }
    });
    function Settings(_a) {
      var onSave = _a.onSave,
          defaultFocusRef = _a.defaultFocusRef;

      var _b, _c, _d, _e;

      var mode = w$1(ConsentModeContext);

      var _f = m$1((_b = getCookieConsentPreference(mode)) === null || _b === void 0 ? void 0 : _b.advertising),
          advertising = _f[0],
          setAdvertising = _f[1];

      var _g = m$1((_c = getCookieConsentPreference(mode)) === null || _c === void 0 ? void 0 : _c.marketing),
          marketing = _g[0],
          setMarketing = _g[1];

      var _h = m$1((_d = getCookieConsentPreference(mode)) === null || _d === void 0 ? void 0 : _d.analytics),
          analytics = _h[0],
          setAnalytics = _h[1];

      var _j = m$1((_e = getCookieConsentPreference(mode)) === null || _e === void 0 ? void 0 : _e.performance),
          performance = _j[0],
          setPerformance = _j[1];

      var _k = m$1(false),
          error = _k[0],
          setError = _k[1];

      l(function () {
        if (advertising != null && analytics != null && marketing != null && performance !== null && error === true) {
          setError(false);
        }
      }, [advertising, analytics, marketing, performance, error]);

      function savePreferences() {
        if (advertising != null && analytics != null && marketing != null && performance != null) {
          setError(false);
          setCookieConsentPreference({
            advertising: advertising,
            analytics: analytics,
            marketing: marketing,
            performance: performance
          });
          onSave && onSave({
            advertising: advertising,
            analytics: analytics,
            marketing: marketing,
            performance: performance
          });
        } else {
          setError(true);
        }
      }

      return h(Wrap$2, null, h(Heading, {
        id: "manage-cookies-heading"
      }, "Manage your cookies"), h(SubHeading, null, "Essential cookies are always on. You have the option to turn off other cookie types."), h(AccordionManager, null, h(Accordion, {
        label: "Essential cookies",
        description: "These cookies are essential so that you can use the website and use its functions. They cannot be turned off. They're set in response to requests made by you, such as setting your privacy preferences, logging in or filling in forms."
      }, "Always On"), h(Accordion, {
        label: "Advertising cookies",
        description: h("span", null, "These cookies provide advertising companies with information about your online activity to help them deliver more relevant online advertising to you or to limit how many times you see an ad. This information may be shared with other advertising companies.", ' ', h("a", {
          href: "https://www.intercom.com/legal/cookie-policy#why-do-we-use-cookies",
          target: "_blank",
          rel: "noopener noreferrer"
        }, "See a list of the advertising cookies we use here."))
      }, h(Switch, {
        id: "advertising",
        value: advertising,
        changeValue: setAdvertising,
        onRef: defaultFocusRef,
        enableErrorState: error
      })), h(Accordion, {
        label: "Marketing cookies",
        description: h("span", null, "These account-based marketing cookies enable us to identify future prospects and personalise sales and marketing interactions with them.", ' ', h("a", {
          href: "https://www.intercom.com/legal/cookie-policy#why-do-we-use-cookies",
          target: "_blank",
          rel: "noopener noreferrer"
        }, "See a list of the marketing cookies we use here."))
      }, h(Switch, {
        id: "marketing",
        value: marketing,
        changeValue: setMarketing,
        enableErrorState: error
      })), h(Accordion, {
        label: "Performance/functionality cookies",
        description: h("span", null, "These cookies are used to enhance the performance and functionality of our Websites but are non-essential to their use. However, without these cookies, certain functionality like videos may become unavailable.", ' ', h("a", {
          href: "https://www.intercom.com/legal/cookie-policy#why-do-we-use-cookies",
          target: "_blank",
          rel: "noopener noreferrer"
        }, "See a list of the performance/functionality cookies we use here."))
      }, h(Switch, {
        id: "performance",
        value: performance,
        changeValue: setPerformance,
        enableErrorState: error
      })), h(Accordion, {
        label: "Analytics cookies",
        description: h("span", null, "These cookies collect information to help us understand how our Websites are being used or how effective our marketing campaigns are, or to help us customise our Websites for you.", ' ', h("a", {
          href: "https://www.intercom.com/legal/cookie-policy#why-do-we-use-cookies",
          target: "_blank",
          rel: "noopener noreferrer"
        }, "See a list of the analytics cookies we use here."))
      }, h(Switch, {
        id: "analytics",
        value: analytics,
        changeValue: setAnalytics,
        enableErrorState: error
      }))), h(Cta, null, error && h("div", null, h(Error$1, null, "Please select a choice for each option")), h(Button, {
        variant: "primary",
        onClick: savePreferences
      }, "Save preferences")));
    }

    var css$5 = picostyle(h);
    var Wrap$3 = css$5('div')(function (props) {
      return {
        display: 'grid',
        gridTemplateColumns: '[left-gutter] 1fr [content] 12fr [right-gutter] 1fr',
        padding: '30px 0',
        background: 'rgba(0, 0, 0, 0.24);',
        position: 'fixed',
        top: '0',
        bottom: '0',
        left: '0',
        right: '0',
        color: 'black',
        zIndex: '100000',
        transition: 'opacity .2s',
        opacity: "" + props.opacity
      };
    });
    var Overlay = css$5('div')({
      position: 'absolute',
      top: '0',
      bottom: '0',
      left: '0',
      right: '0',
      zIndex: '-1',
      ':focus': {
        outline: '0'
      }
    });
    var Inner = css$5('div')({
      gridColumn: 'content',
      width: '100%',
      maxWidth: '690px',
      margin: '0 auto',
      display: 'flex',
      alignItems: 'flex-start',
      marginTop: '40px',
      '@media (max-width: 600px), (max-height: 650px)': {
        marginTop: '0'
      }
    });
    var Content = css$5('div')({
      background: '#FFFFFF',
      boxShadow: '0px 5px 10px rgba(75, 75, 75, 0.11), 0px 5px 20px rgba(89, 89, 89, 0.12)',
      borderRadius: '8px',
      maxHeight: 'calc(100vh - 100px)',
      overflow: 'auto',
      width: '100%',
      padding: '60px 120px 40px',
      position: 'relative',
      '@media (max-width: 600px), (max-height: 650px)': {
        maxHeight: 'calc(100vh - 60px)'
      },
      '@media (max-width: 800px)': {
        paddingLeft: '60px',
        paddingRight: '60px'
      },
      '@media (max-width: 600px)': {
        padding: '70px 20px 20px'
      }
    });
    var Close = css$5('button')({
      cursor: 'pointer',
      border: 'none',
      padding: '0',
      position: 'absolute',
      top: '20px',
      right: '20px'
    });
    function Modal(_a) {
      var onSave = _a.onSave,
          onClose = _a.onClose;
      var wrap = d$1(null);
      var defaultFocusRef = d$1(null);

      var _b = m$1(0),
          opacity = _b[0],
          setOpacity = _b[1];

      function handleSave(cookies) {
        setOpacity(0);
        setTimeout(function () {
          return onSave(cookies);
        }, 200);
      }

      function handleClose() {
        setOpacity(0);
        setTimeout(onClose, 200);
      }

      l(function () {
        var _a, _b;

        setOpacity(1);
        new FocusTrap({
          node: (_a = wrap === null || wrap === void 0 ? void 0 : wrap.current) === null || _a === void 0 ? void 0 : _a.base
        });
        (_b = defaultFocusRef === null || defaultFocusRef === void 0 ? void 0 : defaultFocusRef.current) === null || _b === void 0 ? void 0 : _b.base.focus();
      }, []);
      l(function () {
        function closeOnEscape(event) {
          if (event.key === 'Escape') {
            setOpacity(0);
            setTimeout(onClose, 200);
          }
        }

        document.addEventListener('keydown', closeOnEscape);
        return function () {
          document.removeEventListener('keydown', closeOnEscape);
        };
      }, [onClose]);
      return h(Wrap$3, {
        opacity: opacity,
        ref: wrap
      }, h(Overlay, {
        onClick: handleClose,
        tabIndex: -1
      }), h(Inner, {
        role: "dialog",
        "aria-labelledby": "manage-cookies-heading"
      }, h(Content, null, h(Close, {
        onClick: handleClose
      }, h("span", {
        "class": "vh"
      }, "Close dialog"), h("img", {
        src: "https://marketing.intercomcdn.com/assets/gdpr-close-icon.svg",
        width: "26",
        alt: ""
      })), h(Settings, {
        onSave: handleSave,
        defaultFocusRef: defaultFocusRef
      }))));
    }

    var css$6 = picostyle(h);
    var P$1 = css$6('p')({
      margin: '1em 0',
      ':last-of-type': {
        marginBottom: '1.5em'
      }
    });
    var DateTimeCopy = css$6('span')(function (props) {
      return __assign({}, props.color && {
        color: props.color
      });
    });

    var arrayToText = function arrayToText(arr) {
      return arr.join(', ').replace(/,(?!.*,)/gim, ' and');
    };

    var TRESHOLD_TO_SHOW_UPDATED_COPY_IN_SECONDS = 5;
    function ConsentState(_a) {
      var onSave = _a.onSave;
      var mode = w$1(ConsentModeContext);
      var consentDateTime = getConsentTimeStamp();

      var _b = m$1(consentDateTime ? (new Date().getTime() - consentDateTime) / 1000 < TRESHOLD_TO_SHOW_UPDATED_COPY_IN_SECONDS : false),
          consentUpdated = _b[0],
          setConsentUpdated = _b[1];

      var _c = m$1(false),
          modalOpen = _c[0],
          setModalOpen = _c[1];

      var cookieConsent = getCookieConsentPreference(mode);
      if (!cookieConsent) return null;

      function handleSave(cookies) {
        setConsentUpdated(true);
        setModalOpen(false);
        onSave(cookies);
      }

      var optedInCookies = Object.keys(cookieConsent).filter(function (cookie) {
        return !!cookieConsent[cookie];
      });
      var allowAllCookies = optedInCookies.length === Object.keys(cookieConsent).length;

      var capitalizedCookies = __spreadArrays(['Essential'], optedInCookies).map(function (cookie) {
        return "" + cookie.charAt(0).toUpperCase() + cookie.slice(1);
      });

      var cookieConsentCopy = allowAllCookies ? "Allow all cookies: (" + arrayToText(capitalizedCookies) + ")" : "Only " + arrayToText(capitalizedCookies) + " cookies.";
      return h("div", null, modalOpen && h(Modal, {
        onSave: handleSave,
        onClose: function onClose() {
          return setModalOpen(false);
        }
      }), h(P$1, null, "Your current state: ", cookieConsentCopy), consentDateTime && h(P$1, null, h(DateTimeCopy, {
        color: consentUpdated && '#ec7965'
      }, consentUpdated ? 'Updated' : 'Consent date', ":"), ' ', new Intl.DateTimeFormat('en', {
        weekday: 'long',
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: 'numeric',
        minute: 'numeric',
        second: 'numeric',
        timeZoneName: 'short'
      }).format(consentDateTime)), h(Button, {
        variant: "primary",
        onClick: function onClick() {
          return setModalOpen(true);
        }
      }, "Change your consent"));
    }

    function GlobalStyles() {
      return h("style", null, "\n      @font-face {\n        font-family: \"GDPRGraphik\";\n        font-display: swap;\n        src: url(\"https://fonts.intercomcdn.com/graphik/Graphik-Regular.woff\") format(\"woff\");\n        font-weight: normal;\n        font-style: normal;\n      }\n      @font-face {\n        font-family: \"GDPRGraphik\";\n        font-display: swap;\n        src: url(\"https://fonts.intercomcdn.com/graphik/Graphik-Bold.woff\") format(\"woff\");\n        font-weight: bold;\n        font-style: normal;\n      }\n      .intercom-cookie-consent-banner-wrap {\n        font-family: GDPRGraphik, Graphik, Helvetica, Arial, sans-serif;\n        line-height: 1.5;\n        font-size: 16px;\n        text-align: left;\n      }\n      .intercom-cookie-consent-banner-wrap *,\n      .intercom-cookie-consent-banner-wrap *:before,\n      .intercom-cookie-consent-banner-wrap *:after {\n        box-sizing: border-box;\n      }\n      .intercom-cookie-consent-banner-wrap a {\n        color: inherit;\n        -webkit-text-decoration: none;\n        text-decoration: none;\n        border-bottom: 1px dotted;\n        word-break: normal;\n      }\n      .intercom-cookie-consent-banner-wrap button {\n        background-color: transparent;\n      }\n      .intercom-cookie-consent-banner-wrap a,\n      .intercom-cookie-consent-banner-wrap button {\n        outline: none;\n      }\n      .intercom-cookie-consent-banner-wrap button::-moz-focus-inner {\n        border: 0;\n      }\n      .intercom-cookie-consent-banner-wrap.intercom-cookie-consent-banner-wrap__focus-indicators a:active ,\n      .intercom-cookie-consent-banner-wrap.intercom-cookie-consent-banner-wrap__focus-indicators a:focus {\n        border-bottom: 1px solid;\n      }\n      .intercom-cookie-consent-banner-wrap.intercom-cookie-consent-banner-wrap__focus-indicators button.bold-focus {\n        position: relative;\n      }\n      .intercom-cookie-consent-banner-wrap.intercom-cookie-consent-banner-wrap__focus-indicators button.bold-focus:focus:after,\n      .intercom-cookie-consent-banner-wrap.intercom-cookie-consent-banner-wrap__focus-indicators .focus-within:focus-within:after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: -6px;\n        right: -6px;\n        bottom: -6px;\n        left: -6px;\n        border: 3px solid black;\n        border-radius: 10px;\n      }\n      .intercom-cookie-consent-banner-wrap.intercom-cookie-consent-banner-wrap__focus-indicators button.cookie-consent-button__small:focus:after {\n        border-width: 2px;\n      }\n      .intercom-cookie-consent-banner-wrap.intercom-cookie-consent-banner-wrap__focus-indicators .cookie-consent-focusable:focus {\n        outline: rgb(24, 24, 24) dotted 1px;\n      }\n      .intercom-cookie-consent-banner-wrap .vh {\n        position: absolute !important;\n        height: 1px;\n        width: 1px;\n        overflow: hidden;\n        clip: rect(1px, 1px, 1px, 1px);\n        white-space: nowrap; /* added line */\n      }\n      .intercom-cookie-consent-banner-wrap button {\n        appearance: none;\n        -webkit-appearance: none;\n        font-size: inherit;\n      }\n    ");
    }

    function CookieConsent(_a) {
      var children = _a.children,
          mode = _a.mode;

      var _b = m$1(false),
          focusStyle = _b[0],
          setFocusStyle = _b[1];

      return h("div", {
        id: "intercom-cookie-consent-banner-wrap",
        "class": focusStyle ? 'intercom-cookie-consent-banner-wrap intercom-cookie-consent-banner-wrap__focus-indicators' : 'intercom-cookie-consent-banner-wrap',
        "aria-live": "polite",
        onKeyDown: function onKeyDown() {
          return setFocusStyle(true);
        },
        onClick: function onClick(e) {
          return e.screenX && setFocusStyle(false);
        }
      }, h(GlobalStyles, null), h(ConsentModeContext.Provider, {
        value: mode
      }, children));
    }

    var css$7 = picostyle(h);
    var Wrap$4 = css$7('div')(function (props) {
      return {
        display: 'grid',
        gridTemplateColumns: '[left-gutter] 1fr [content] 12fr [right-gutter] 1fr',
        padding: '78px 0 70px',
        background: '#F4F0EB',
        boxShadow: '0px 1px 48px rgba(48, 48, 48, 0.25)',
        position: 'fixed',
        bottom: '0',
        left: '0',
        right: '0',
        color: 'black',
        zIndex: '100000',
        transition: 'opacity .2s',
        opacity: "" + props.opacity,
        '@media (max-width: 1000px)': {
          paddingTop: '70px'
        },
        '@media (max-width: 600px)': {
          padding: '40px 0 60px'
        }
      };
    });
    var Inner$1 = css$7('div')({
      gridColumn: 'content',
      maxWidth: '960px',
      margin: '0 auto',
      display: 'grid',
      gridTemplateColumns: 'repeat(12,1fr)',
      gridColumnGap: '20px'
    });
    var Heading$1 = css$7('h2')({
      fontSize: '26px',
      fontWeight: 'bold',
      margin: '0',
      gridColumn: '1 / span 5',
      '@media (max-width: 1000px)': {
        gridColumn: '1 / span 12'
      }
    });
    var HeadingContent = css$7('span')({
      display: 'flex',
      alignItems: 'center',
      '@media (max-width: 600px)': {
        flexFlow: 'column',
        alignItems: 'flex-start'
      }
    });
    var CookieImage = css$7('img')({
      margin: '-8px 15px 0 0',
      maxHeight: '47px',
      '@media (max-width: 600px)': {
        margin: '0 0 5px 0'
      }
    });
    var Paragraph = css$7('p')({
      marginTop: '-14px',
      maxWidth: '530px',
      gridColumn: '6 / span 7',
      fontSize: '16px',
      '@media (max-width: 1000px)': {
        margin: '10px 0 20px',
        gridColumn: '1 / span 12',
        maxWidth: 'none'
      }
    });
    var Buttons = css$7('div')({
      marginTop: '20px',
      display: 'grid',
      gridColumn: '6 / span 7',
      gridTemplateColumns: 'repeat(12, minmax(220px, 1fr))',
      gridRowGap: '20px',
      gridColumnGap: '30px',
      '@media (max-width: 1000px)': {
        gridColumn: '1 / span 12',
        marginTop: '0'
      },
      '@media (max-width: 600px)': {
        gridTemplateColumns: '1fr',
        gridColumn: '1 / span 12',
        marginTop: '0'
      }
    });
    function Banner(_a) {
      var onSave = _a.onSave,
          setRoute = _a.setRoute;
      var wrap = d$1(null);
      var acceptCookies = d$1(null);

      var _b = m$1(0),
          opacity = _b[0],
          setOpacity = _b[1];

      l(function () {
        var _a, _b;

        setOpacity(1);
        new FocusTrap({
          node: (_a = wrap === null || wrap === void 0 ? void 0 : wrap.current) === null || _a === void 0 ? void 0 : _a.base
        });
        (_b = acceptCookies === null || acceptCookies === void 0 ? void 0 : acceptCookies.current) === null || _b === void 0 ? void 0 : _b.base.focus();
      }, []);

      function acceptAllCookies() {
        setOpacity(0);
        var cookiePreference = {
          advertising: true,
          analytics: true,
          marketing: true,
          performance: true
        };
        setCookieConsentPreference(cookiePreference);
        setTimeout(function () {
          return onSave(cookiePreference);
        }, 200);
      }

      function manageCookies() {
        setOpacity(0);
        setTimeout(function () {
          return setRoute('modal');
        }, 200);
      }

      return h(Wrap$4, {
        opacity: opacity,
        ref: wrap
      }, h(Inner$1, null, h(Heading$1, null, h(HeadingContent, null, h(CookieImage, {
        src: "https://marketing.intercomcdn.com/assets/cookie.png",
        width: "47",
        alt: "Cookie"
      }), h("span", null, "Fresh cookie update"))), h(Paragraph, null, "We use cookies to make our site work and also for analytics and advertising purposes. You can enable or disable optional cookies as desired. See our", ' ', h("a", {
        href: "https://www.intercom.com/cookie-policy",
        target: "_blank",
        rel: "noopener noreferrer"
      }, "Cookie Policy"), ' ', "for more details."), h(Buttons, null, h("span", null, h(Button, {
        variant: "secondary",
        onClick: manageCookies,
        width: "100%"
      }, "Manage your cookies")), h("span", null, h(Button, {
        onClick: acceptAllCookies,
        width: "100%",
        ref: acceptCookies,
        "data-accept-all": true
      }, "Accept all cookies")))));
    }

    function Router(_a) {
      var onSave = _a.onSave,
          _b = _a.initialRoute,
          initialRoute = _b === void 0 ? 'banner' : _b;

      var _c = m$1(initialRoute),
          route = _c[0],
          setRoute = _c[1];

      if (route === 'banner') return h(Banner, {
        onSave: onSave,
        setRoute: setRoute
      });
      if (route === 'modal') return h(Modal, {
        onSave: onSave,
        onClose: function onClose() {
          return setRoute('banner');
        }
      });
      return null;
    }

    function createElement(id) {
      var element = document.createElement('div');
      element.id = id;
      document.body.appendChild(element);
      return element;
    }

    function renderCookieConsentBanner(mode) {
      return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
          return [2
          /*return*/
          , new Promise(function (resolve) {
            var popUpWrap = document.querySelector('#intercom-cookie-consent-banner') || createElement('intercom-cookie-consent-banner');

            function onSave(cookiePreferences) {
              intercom.post('/cookie_consent_mode', cookiePreferences);
              H(null, popUpWrap);
              resolve(cookiePreferences);
            }

            return H(h(CookieConsent, {
              mode: mode
            }, h(Router, {
              onSave: onSave
            })), popUpWrap);
          })];
        });
      });
    }
    function renderCookieConsent(element, onSave, mode) {
      return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
          if (!element) {
            throw new Error('Element argument is required');
          }

          if (mode === 'no-consent') {
            // Don't render anything when the user has no ability to change their preferences
            return [2
            /*return*/
            ];
          }

          H(h(CookieConsent, {
            mode: mode
          }, h(ConsentState, {
            onSave: onSave
          })), element);
          return [2
          /*return*/
          ];
        });
      });
    }

    var detectUa_umd = createCommonjsModule(function (module, exports) {
    !function(e,t){t(exports);}(commonjsGlobal,function(e){var t=(i.prototype.match=function(e,t){var i=this.userAgent.match(t);return i&&1<i.length&&i[e]||""},Object.defineProperty(i.prototype,"isMobile",{get:function(){return !this.isTablet&&(/[^-]mobi/i.test(this.userAgent)||"iphone"===this.iOSDevice||"ipod"===this.iOSDevice||this.isAndroidDevice||/nexus\s*[0-6]\s*/i.test(this.userAgent))},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isTablet",{get:function(){return /tablet/i.test(this.userAgent)&&!/tablet pc/i.test(this.userAgent)||"ipad"===this.iOSDevice||this.isAndroidDevice&&!/[^-]mobi/i.test(this.userAgent)||!/nexus\s*[0-6]\s*/i.test(this.userAgent)&&/nexus\s*[0-9]+/i.test(this.userAgent)},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isDesktop",{get:function(){return !this.isMobile&&!this.isTablet},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isMacOS",{get:function(){return /macintosh/i.test(this.userAgent)&&{version:this.match(1,/mac os x (\d+(\.?_?\d+)+)/i).replace(/[_\s]/g,".").split(".").map(function(e){return e})[1]}},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isWindows",{get:function(){return /windows /i.test(this.userAgent)&&{version:this.match(1,/Windows ((NT|XP)( \d\d?.\d)?)/i)}},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isiOS",{get:function(){return !!this.iOSDevice&&{version:this.match(1,/os (\d+([_\s]\d+)*) like mac os x/i).replace(/[_\s]/g,".")||this.match(1,/version\/(\d+(\.\d+)?)/i)}},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"isAndroid",{get:function(){return this.isAndroidDevice&&{version:this.match(1,/android[ \/-](\d+(\.\d+)*)/i)}},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"browser",{get:function(){var e=this.match(1,/version\/(\d+(\.\d+)?)/i);return /opera/i.test(this.userAgent)?{name:"Opera",version:e||this.match(1,/(?:opera|opr|opios)[\s\/](\d+(\.\d+)?)/i)}:/opr\/|opios/i.test(this.userAgent)?{name:"Opera",version:this.match(1,/(?:opr|opios)[\s\/](\d+(\.\d+)?)/i)||e}:/SamsungBrowser/i.test(this.userAgent)?{name:"Samsung Internet for Android",version:e||this.match(1,/(?:SamsungBrowser)[\s\/](\d+(\.\d+)?)/i)}:/yabrowser/i.test(this.userAgent)?{name:"Yandex Browser",version:e||this.match(1,/(?:yabrowser)[\s\/](\d+(\.\d+)?)/i)}:/ucbrowser/i.test(this.userAgent)?{name:"UC Browser",version:this.match(1,/(?:ucbrowser)[\s\/](\d+(\.\d+)?)/i)}:/msie|trident/i.test(this.userAgent)?{name:"Internet Explorer",version:this.match(1,/(?:msie |rv:)(\d+(\.\d+)?)/i)}:/(edge|edgios|edga|edg)/i.test(this.userAgent)?{name:"Microsoft Edge",version:this.match(2,/(edge|edgios|edga|edg)\/(\d+(\.\d+)?)/i)}:/firefox|iceweasel|fxios/i.test(this.userAgent)?{name:"Firefox",version:this.match(1,/(?:firefox|iceweasel|fxios)[ \/](\d+(\.\d+)?)/i)}:/chromium/i.test(this.userAgent)?{name:"Chromium",version:this.match(1,/(?:chromium)[\s\/](\d+(?:\.\d+)?)/i)||e}:/chrome|crios|crmo/i.test(this.userAgent)?{name:"Chrome",version:this.match(1,/(?:chrome|crios|crmo)\/(\d+(\.\d+)?)/i)}:/safari|applewebkit/i.test(this.userAgent)?{name:"Safari",version:e}:{name:this.match(1,/^(.*)\/(.*) /),version:this.match(2,/^(.*)\/(.*) /)}},enumerable:!0,configurable:!0}),i);function i(e){this.userAgent=e||(window&&window.navigator?window.navigator.userAgent:""),this.isAndroidDevice=!/like android/i.test(this.userAgent)&&/android/i.test(this.userAgent),this.iOSDevice=this.match(1,/(iphone|ipod|ipad)/i).toLowerCase(),"MacIntel"===navigator.platform&&2<navigator.maxTouchPoints&&!window.MSStream&&(this.iOSDevice="ipad");}e.DetectUA=t,Object.defineProperty(e,"__esModule",{value:!0});});
    });

    unwrapExports(detectUa_umd);
    var detectUa_umd_1 = detectUa_umd.DetectUA;

    function device () {
      var device = new detectUa_umd_1();

      if (device.isMobile) {
        return 'mobile';
      } else if (device.isTablet) {
        return 'tablet';
      }

      return 'desktop';
    }

    // @ts-nocheck
    function addGoogleRemarketing (customAttributes) {
      try {
        google_trackConversion({
          google_conversion_id: 967943485,
          google_custom_params: customAttributes,
          google_remarketing_only: true
        });
      } catch (e) {
        console.error(e);
      }
    }

    // @ts-nocheck
    // Example remarketing pixel link with conversion label and custom attribute
    // Ex: googleads.g.doubleclick.net/pagead/viewthroughconversion/<account-id>/?label=<conversion-label-id>&data.custom_param=value
    function addGoogleRemarketingImage (customAttributes) {
      try {
        var img = new Image(1, 1);
        img.id = 'googlePixelIntercom';
        var params = '';
        var entity_params = ['label', 'currency_code', 'value'];

        for (var key in customAttributes) {
          if (customAttributes[key]) {
            if (entity_params.indexOf(key) > -1) {
              params += "&" + key + "=" + customAttributes[key];
            } else {
              params += "&data." + key + "=" + customAttributes[key];
            }
          }
        }

        img.src = "//www.googleadservices.com/pagead/conversion/967943485/?guid=ON&script=0" + params;
        document.body && document.body.appendChild(img);
      } catch (e) {
        console.error(e);
      }
    }

    function fireThirdPartyEventsOnEmailSubmission () {
      if (getEnvironment() !== 'production') {
        return;
      }
      /*
       * FACEBOOK PIXEL
       */


      if (window.fbq) {
        window.fbq('trackCustom', 'ms_email_signed_up', {});
        window.fbq('track', 'Lead', {});
      }
      /*
       * QUORA
       */


      if (window.qp) {
        window.qp('track', 'Generic');
      }
      /*
       * GOOGLE ADWORDS
       */


      addGoogleRemarketing({
        send_to: 'AW-967943485/UutXCOvj9WQQvcrGzQM'
      });
      addGoogleRemarketingImage({
        ms_email_signed_up: 'true',
        label: 'e0V8CJ2JkGwQvcrGzQM',
        value: '1.00',
        currency_code: 'USD'
      });
      /*
       * STATIC CONVERSION PIXEL
       */

      var staticConversionPixel = new Image(1, 1);
      staticConversionPixel.src = '//insight.adsrvr.org/track/conv/?adv=bzwixbq&ct=0:sxgxp5i&fmt=3';
      /*
       * LINKEDIN PIXEL
       */

      var linkedinPixel = new Image(1, 1);
      linkedinPixel.src = 'https://dc.ads.linkedin.com/collect/?pid=38643&conversionId=139071&fmt=gif';
      /*
       * BING
       */

      window.uetq = window.uetq || [];
      window.uetq.push({
        ec: 'email_submission',
        ea: 'email_submission',
        el: 'email_submission',
        ev: 0,
        gv: 0
      });
    }

    function getUrlParam (window, name) {
      return (window.location.search.split(name + "=")[1] || '').split('&')[0];
    }

    var Metrics = {
      increment: increment,
      recordTiming: recordTiming
    };

    function increment(name, tags) {
      var _a;

      return __awaiter(this, void 0, void 0, function () {
        var metricTags, result;
        return __generator(this, function (_b) {
          switch (_b.label) {
            case 0:
              metricTags = __assign(__assign({}, getDefaultTags()), tags);
              return [4
              /*yield*/
              , intercom.post('/metrics', {
                metric_name: name,
                tags: metricTags
              })];

            case 1:
              result = _b.sent();

              if (result.error && result.exception) {
                (_a = window.Raven) === null || _a === void 0 ? void 0 : _a.captureException(result.exception);
              }

              return [2
              /*return*/
              ];
          }
        });
      });
    }

    function recordTiming(name, duration, tags) {
      var _a;

      return __awaiter(this, void 0, void 0, function () {
        var metricTags, result;
        return __generator(this, function (_b) {
          switch (_b.label) {
            case 0:
              metricTags = __assign(__assign({}, getDefaultTags()), tags);
              return [4
              /*yield*/
              , intercom.post('/timing_metrics', {
                metric_name: name,
                duration: duration,
                tags: metricTags
              })];

            case 1:
              result = _b.sent();

              if (result.error && result.exception) {
                (_a = window.Raven) === null || _a === void 0 ? void 0 : _a.captureException(result.exception);
              }

              return [2
              /*return*/
              ];
          }
        });
      });
    }

    function getDefaultTags() {
      var environment = getEnvironment();
      var device$1 = device();
      return {
        environment: environment,
        device: device$1
      };
    }

    /*
    Documentation:
    addMarketoFormToDom Adds the skeleton HTML form element
    loadMarketoFormsJs  Loads the Marketo forms2.js by adding a script element
    loadMarketoForm     Uses the marketo forms2.js to load the marketo form into the form element
    */
    var MARKETO_RAVEN_OPTIONS = {
      tags: {
        responsible_team: 'team-automation-enablement',
        error_type: 'marketo'
      }
    };

    var MarketoFormError =
    /** @class */
    function (_super) {
      __extends(MarketoFormError, _super);

      function MarketoFormError(err) {
        var _this = _super.call(this, err) || this;

        _this.intercomErrorType = '';
        return _this;
      }

      return MarketoFormError;
    }(Error);

    function addMarketoFormToDOM(formId) {
      // The HTML form's id should be distinct from formId. If you have an HTML element with id `foo`, then window.foo points to that element.
      var formHtmlId = "marketoForm_" + formId + "_html_id";

      if (window[formHtmlId]) {
        return;
      }

      var form = document.createElement('form');
      form.id = formHtmlId;
      form.style.display = 'none';
      document.getElementsByTagName('body')[0].appendChild(form);
    }
    var FORM_JS_REQUEST_KEY = 'mktoForm_js_request';
    function loadMarketoFormsJs() {
      if (window[FORM_JS_REQUEST_KEY]) {
        return window[FORM_JS_REQUEST_KEY];
      }

      window[FORM_JS_REQUEST_KEY] = new Promise(function (resolve, reject) {
        var script = document.createElement('script');
        script.async = true;
        script.onload = resolve;
        script.onerror = reject;
        script.src = 'https://app-sjqe.marketo.com/js/forms2/js/forms2.min.js';
        document.getElementsByTagName('head')[0].appendChild(script);
      })["catch"](function () {
        Metrics.increment('GtmJS.Marketo.formJsBlocked');
      });
      return window[FORM_JS_REQUEST_KEY];
    }
    function loadMarketoForm(hostName, accountId, formId) {
      var formRequestKey = "mktoForm_" + formId + "_request";

      if (window[formRequestKey]) {
        return window[formRequestKey];
      }

      window[formRequestKey] = new Promise(function (resolve, reject) {
        window.MktoForms2.loadForm(hostName, accountId, formId, function (marketoForm) {
          if (marketoForm) {
            // Store the marketo form object so we can call val() on it later.
            window["mktoForm_" + formId] = marketoForm;

            if (window.Raven) {
              var addBreadcrumb = window.Raven.captureBreadcrumb || window.Raven.addBreadcrumb;
              addBreadcrumb({
                category: 'marketo',
                message: "Attached form " + JSON.stringify(window["mktoForm_" + formId]) + " to window " + window
              });
            } // Tell the Marketo form not to redirect anywhere. We just want to submit the form and then do our own thing.
            // Do not go wherever Marketo's form takes us.


            marketoForm.onSuccess(function () {
              return false;
            });
            resolve(marketoForm);
          } else {
            var error = new MarketoFormError("marketo form not loaded hostName: " + hostName + " accountId: " + accountId + " formId: " + formId);
            error.intercomErrorType = 'GtmJS.Marketo.formLoad.error';
            reject(error);
          }
        });
      });
      return window[formRequestKey];
    }
    function reportMarketoErrorToSentry(error, extras) {
      if (extras === void 0) {
        extras = {};
      }

      try {
        if (window.Raven) {
          window.Raven.captureException(error, Object.assign({}, MARKETO_RAVEN_OPTIONS, {
            extra: extras
          }));
        }
      } catch (e) {// Do nothing
      }
    }
    function whenMarketoFormReady(formId) {
      // Adds a callback that will be called exactly once for each form on the page that becomes “ready”.
      // The callback is passed a single argument, a form object. http://developers.marketo.com/javascript-api/forms/api-reference/
      return new Promise(function (resolve, reject) {
        if (!window.MktoForms2) {
          reject(new MarketoFormError('Marketo not loaded when calling whenMarketoFormReady'));
        }

        window.MktoForms2.whenReady(function (marketoForm) {
          if (marketoForm.getId() === formId) {
            resolve();
          }
        });
      });
    }
    function submitMarketoForm(form, formFields) {
      var formId = form.getId();
      return new Promise(function (resolve, reject) {
        if (!form.validate || !form.validate()) {
          var error = new Error('marketoFormValidationFailed');
          reportMarketoErrorToSentry(error, formFields);
          Metrics.increment('GtmJS.Marketo.formValidationFailed', {
            formId: formId
          });
          reject(error);
        } else {
          // Resolve no matter what after a certain amount of time
          var fallbackResolveTimer_1 = setTimeout(function () {
            Metrics.increment('GtmJS.Marketo.formSubmissionTimeout', {
              formId: formId
            });
            resolve();
          }, 10000);
          form.onSuccess(function () {
            clearTimeout(fallbackResolveTimer_1); // This call may not succeed if redirect cancels it

            Metrics.increment('GtmJS.Marketo.success', __assign({
              formId: formId
            }, getCookieConsentPropertiesForMetric()));
            window.dataLayer = window.dataLayer || [];
            window.dataLayer.push({
              event: 'marketo-form-submitted',
              custom_event_metadata: __assign({
                'marketo-form-id': formId
              }, formFields)
            });
            resolve(); // Tell the Marketo form not to redirect anywhere. We just want to submit the form and then do our own thing.

            return false;
          });
          form.submit();
        }
      });
    }

    // @ts-nocheck
    function addFacebookImagePixel (eventName, customAttributes) {
      try {
        // https://developers.facebook.com/docs/marketing-api/audiences-api/pixel#inpageevents
        var pixelId = '938193196235407';
        var attrs = Object.assign(customAttributes);
        var img = new Image(1, 1);
        var params = '';
        attrs['ev'] = eventName;
        attrs['id'] = pixelId;
        attrs['noscript'] = 1;

        for (var key in attrs) {
          if (attrs[key]) {
            params += "&" + key + "=" + attrs[key];
          }
        }

        img.id = 'fbPixelIntercom';
        img.src = "https://www.facebook.com/tr?" + params;
        document.body && document.body.appendChild(img);
      } catch (e) {
        console.error(e);
      }
    }

    // @ts-nocheck
    function addFacebookPixel (eventName, customAttributes) {
      try {
        fbq('trackCustom', eventName, customAttributes);
      } catch (e) {
        console.error(e);
      }
    }

    // @ts-nocheck
    function initFacebookPixel () {
      try {
        if (typeof fbq === 'undefined') {
          !function (f, b, e, v, n, t, s) {
            if (f.fbq) return;

            n = f.fbq = function () {
              n.callMethod ? n.callMethod.apply(n, arguments) : n.queue.push(arguments);
            };

            if (!f._fbq) f._fbq = n;
            n.push = n;
            n.loaded = !0;
            n.version = '2.0';
            n.queue = [];
            t = b.createElement(e);
            t.async = !0;
            t.src = v;
            s = b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t, s);
          }(window, document, 'script', 'https://connect.facebook.net/en_US/fbevents.js');
          fbq('init', '938193196235407');
        }
      } catch (e) {
        console.error(e);
      }
    }

    // @ts-nocheck
    function initGooglePixel () {
      return new Promise(function (resolve, reject) {
        var script = document.createElement('script');
        script.src = 'https://www.googleadservices.com/pagead/conversion_async.js';
        script.async = true;
        script.addEventListener('load', function () {
          resolve(script);
        }, false);
        script.addEventListener('error', function (e) {
          console.error(e);
          reject(script);
        }, false);
        document.body && document.body.appendChild(script);
      });
    }

    // @ts-nocheck
    function loadClearbitScript() {
      ga('require', 'Clearbit', {
        mapping: {
          companyName: 'dimension11',
          companyEmployeesRange: 'dimension12',
          companyTags: 'dimension13',
          companyTech: 'dimension14',
          companySubIndustry: 'dimension15',
          companyIndustry: 'dimension16',
          companyIndustryGroup: 'dimension17',
          companySector: 'dimension18',
          companyType: 'dimension19',
          companyDomain: 'dimension20'
        }
      });

      (function () {
        var s = document.getElementsByTagName('script')[0];
        var b = document.createElement('script');
        b.type = 'text/javascript';
        b.async = true;
        b.src = 'https://ga.clearbit.com/v1/ga.js?authorization=pk_281710c391d62b4da12e1a9adc3f3a72';
        s.parentNode.insertBefore(b, s);
      })();
    }

    // @ts-nocheck
    function loadGoogleAnalyticsScript(propertyId) {
      try {
        ;

        (function (i, s, o, g, r, a, m) {
          i['GoogleAnalyticsObject'] = r;
          i[r] = i[r] || function () {
            ;
            (i[r].q = i[r].q || []).push(arguments);
          }, i[r].l = 1 * new Date();
          a = s.createElement(o), m = s.getElementsByTagName(o)[0];
          a.async = 1;
          a.src = g;
          m.parentNode.insertBefore(a, m);
        })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

        ga('create', propertyId, 'auto');
      } catch (e) {
        if (window.Raven) {
          window.Raven.captureException(e, {
            tags: {
              responsible_team: 'team-dev-platform'
            }
          });
        } else if (window.location.host.endsWith('.test')) {
          console.error(e);
        }
      }
    }
    function trackPageViewInGoogleAnalytics() {
      if (typeof ga === 'function') {
        ga('set', 'page', window.location.pathname + window.location.search);
        ga('send', 'pageview');
      }
    }

    // @ts-nocheck
    function loadMarketoMunchkinScript() {

      (function () {
        var didInit = false;

        function initMunchkin() {
          if (didInit === false) {
            didInit = true;
            Munchkin.init('258-CLW-344');
          }
        }

        var s = document.createElement('script');
        s.type = 'text/javascript';
        s.async = true;
        s.src = '//munchkin.marketo.net/munchkin.js';

        s.onreadystatechange = function () {
          if (this.readyState == 'complete' || this.readyState == 'loaded') {
            initMunchkin();
          }
        };

        s.onload = initMunchkin;
        document.getElementsByTagName('head')[0].appendChild(s);
      })();
    }
    function trackPageViewInMarketoMunchkin() {
      if ((typeof Munchkin === "undefined" ? "undefined" : _typeof(Munchkin)) === 'object') {
        Munchkin.munchkinFunction('clickLink', {
          href: window.location.pathname + window.location.search
        });
      }
    }

    var defaultMarketoFormId = 1042;
    var gtmCookie = 'gtm_id';
    var datadogCookie = 'datadog';

    var GTMClass =
    /** @class */
    function () {
      function GTMClass() {
        this.version = '1.31.0';
        /** @deprecated */

        this.blocked = false;
        this.blockedByClient = {
          GtmTracking: false,
          Marketo: false
        };
        this.pageviewId = null;
        this.emailSubmissionId = null;
        this.emailSubmissionResponse = null;
        this.meta = {};
        this.pageViewPromise = null;
        this.device = device();

        if (!window.dataLayer) {
          window.dataLayer = [];
        }

        var gtmCookieId = js_cookie.get(gtmCookie);

        if (!gtmCookieId) {
          var cookieIdentifier = v4();
          js_cookie.set(gtmCookie, cookieIdentifier, {
            expires: 365,
            domain: getCookieDomain(),
            samesite: 'none',
            secure: apiEndpoint().startsWith('https:')
          });
        }

        if (!window.IntercomGTM) {
          window.IntercomGTM = this;
        }
      }
      /**
       * Records a pageview
       * @example <caption>Record a pageview</caption>
       * recordPageView().then((response) => console.log(response.pageviewId))
       */


      GTMClass.prototype.recordPageView = function (params) {
        var _this = this; // Using the page URL instead of a flag to support single-page applications.


        if (window.GTM_PAGEVIEW_URL === window.location.href) {
          console.warn('Attempted to record duplicate pageview');
          Metrics.increment('GtmJS.recordPageView.duplicatePageView');
          return window.pageViewPromise;
        }

        window.GTM_PAGEVIEW_URL = window.location.href;
        var queryParams = new URLSearchParams(window.location.search);
        var isTestPageview = queryParams.get('is_test') == 'true';

        var record = function record() {
          return __awaiter(_this, void 0, void 0, function () {
            var response;

            var _a;

            return __generator(this, function (_b) {
              switch (_b.label) {
                case 0:
                  return [4
                  /*yield*/
                  , intercom.post('/pageviews', __assign(__assign({}, params), {
                    page_url: window.location.href.replace(window.location.hash, ''),
                    referrer: document.referrer || getUrlParam(window, 'utm_referrer'),
                    metadata: Object.assign({}, (params || {})['metadata'], {
                      gtm_client_version: '1.31.0',
                      is_test: isTestPageview
                    })
                  }), {
                    headers: {
                      'X-Date': new Date().toISOString()
                    }
                  })];

                case 1:
                  response = _b.sent();

                  if (response.error) {
                    if (response.exception) {
                      (_a = window.Raven) === null || _a === void 0 ? void 0 : _a.captureException(response.exception);
                    } else {
                      this.blockedByClient.GtmTracking = true;
                      Metrics.increment('GtmJS.serviceBlockedByClient', {
                        service: 'GtmTracking'
                      });
                    }

                    this.pageviewId = null;
                    return [2
                    /*return*/
                    , {
                      pageviewId: null
                    }];
                  }

                  this.pageviewId = response.data.pageview_id;
                  return [2
                  /*return*/
                  , {
                    pageviewId: response.data.pageview_id
                  }];
              }
            });
          });
        };

        window.pageViewPromise = record();
        return window.pageViewPromise;
      };
      /**
       * @deprecated Pass experiment impressions to recordPageView instead.
       */


      GTMClass.prototype.recordAbTestImpression = function (pageviewId, experimentName, variation) {
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                return [4
                /*yield*/
                , intercom.post("/ab_test_impressions", {
                  experiment_name: experimentName,
                  variation: variation,
                  pageview_id: pageviewId
                })];

              case 1:
                return [2
                /*return*/
                , _a.sent().resultOrThrow()];
            }
          });
        });
      };
      /**
       * Record experiment impression
       * @example <caption>Record experiment impression</caption>
       * recordExperimentImpression({ pageview_id: 1, experiment: 'my-experiment', variation: 'a', experiment_source:'optimizely'})
       *     .then((response) => console.log(response.id))
       */


      GTMClass.prototype.recordExperimentImpression = function (experimentImpression) {
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                return [4
                /*yield*/
                , intercom.post('/experiment_impressions', {
                  pageview_id: experimentImpression.pageviewId,
                  experiment: experimentImpression.experiment,
                  variation: experimentImpression.variation,
                  experiment_source: experimentImpression.experimentSource
                })];

              case 1:
                return [2
                /*return*/
                , _a.sent().resultOrThrow()];
            }
          });
        });
      };

      GTMClass.prototype.recordEmailSubmissionWithOptions = function (esOptions) {
        return this.recordEmailSubmission(esOptions.email, esOptions.createQualifiedProspect, esOptions.pageViewId, esOptions.opts, esOptions.callback, esOptions.marketoFormId, esOptions.marketoFields && esOptions.marketoFields(), esOptions.disableMarketoIntegration, esOptions.extraMetricsTags);
      };
      /**
       * Records a user email submission
       * @example <caption>Record an email submission</caption>
       * recordEmailSubmission('bob@qatest.app', false, 3).then((id) => console.log(id))
       */


      GTMClass.prototype.recordEmailSubmission = function (email, createQualifiedProspect, pageviewId, opts, cb, marketoFormId, extraMarketoFields, disableMarketoIntegration, extraMetricsTags) {
        var _this = this;

        var pageview_id = pageviewId !== null && pageviewId !== void 0 ? pageviewId : this.pageviewId;
        var metricsTags = Object.assign({
          formId: marketoFormId
        }, extraMetricsTags);

        if (window._DATADOG_SYNTHETICS_BROWSER && !js_cookie.get(datadogCookie)) {
          var cookieIdentifier = v4();
          js_cookie.set('datadog', cookieIdentifier, {
            expires: 365,
            domain: getCookieDomain(),
            samesite: 'none',
            secure: apiEndpoint().startsWith('https:')
          });
        }

        if (typeof pageview_id !== 'number') {
          Metrics.increment('GtmJS.submitFailed.noPageView', metricsTags);
          return Promise.reject(new Error('No pageview ID provided'));
        }

        var marketoFields = Object.assign({
          Email: email,
          gtm_emailsubmission_id_last__c: ''
        }, extraMarketoFields || {});
        Metrics.increment('GtmJS.recordEmailSubmission', metricsTags);
        return intercom.post('/email_submissions', __assign({
          email: email,
          pageview_id: pageview_id,
          qualified_prospect: createQualifiedProspect
        }, opts)).then(function (result) {
          var emailSubmission = result.resultOrThrow();
          _this.emailSubmissionResponse = emailSubmission;
          _this.emailSubmissionId = emailSubmission.id;

          if (_this.emailSubmissionId) {
            marketoFields['gtm_emailsubmission_id_last__c'] = _this.emailSubmissionId.toString();
          }

          if (disableMarketoIntegration) {
            Metrics.increment('GtmJS.Marketo.marketoIntegrationDisabled', metricsTags);

            if (cb) {
              cb(_this.emailSubmissionId);
            }

            return _this.emailSubmissionResponse;
          }

          return _this.recordMarketoEvent(marketoFormId || defaultMarketoFormId, marketoFields).then(function () {
            Metrics.increment('GtmJS.Marketo.emailSubmissionSucceeded', metricsTags);

            if (cb) {
              cb(_this.emailSubmissionId);
            }

            return _this.emailSubmissionResponse;
          })["catch"](function (error) {
            if (console) {
              console.log(error);
            }

            Metrics.increment('GtmJS.Marketo.formSubmissionFailed', metricsTags);

            if (error.message === 'GtmJS.Marketo.formMissing') {
              Metrics.increment('GtmJS.Marketo.uncapturedEmailSubmission.becauseFormMissing', metricsTags);
            } else {
              reportMarketoErrorToSentry(error);
            }

            Metrics.increment('GtmJS.Marketo.uncapturedEmailSubmission', metricsTags);

            if (cb) {
              cb(_this.emailSubmissionId);
            }

            return _this.emailSubmissionResponse;
          });
        });
      };
      /**
       * Submit event data to marketo
       * @param formId
       * @param marketoFields
       * @param paramWindow
       */


      GTMClass.prototype.recordMarketoEvent = function (formId, marketoFields, injectedWindow) {
        var form;
        var paramWindow = injectedWindow || window;

        try {
          form = window["mktoForm_" + formId];

          if (window.Raven) {
            var addBreadcrumb = window.Raven.captureBreadcrumb || window.Raven.addBreadcrumb;
            addBreadcrumb({
              category: 'marketo',
              message: "Retrieved form " + JSON.stringify(window["mktoForm_" + formId]) + " (mktoForm_" + formId + ") from window " + window
            });
          }

          Metrics.increment('GtmJS.Marketo.formRequested', {
            formId: formId
          });

          if (!form) {
            Metrics.increment('GtmJS.Marketo.formMissing', {
              formId: formId
            });
            var exception = new Error('GtmJS.Marketo.formMissing');

            if (window.Raven) {
              window.Raven.captureException(exception);
            }

            throw exception;
          }

          var formFields = Object.assign({
            URL_last__c: paramWindow.location.href,
            Google_Client_ID__c: js_cookie.get('_ga'),
            Google_Click_ID__c: getUrlParam(paramWindow, 'gclid'),
            utm_content_last__c: getUrlParam(paramWindow, 'utm_content'),
            utm_medium_last__c: getUrlParam(paramWindow, 'utm_medium'),
            utm_source_last__c: getUrlParam(paramWindow, 'utm_source'),
            utm_term_last__c: getUrlParam(paramWindow, 'utm_term'),
            utm_ad_last__c: getUrlParam(paramWindow, 'utm_ad'),
            utm_ad_collection_last__c: getUrlParam(paramWindow, 'utm_ad_collection'),
            utm_campaign_last__c: getUrlParam(paramWindow, 'utm_campaign'),
            utm_kw_last__c: getUrlParam(paramWindow, 'utm_kw_last')
          }, marketoFields);
          form.vals(formFields);
          appStatus(formFields.Email);
          return submitMarketoForm(form, formFields);
        } catch (error) {
          if (console) {
            console.log(error);
          }

          Metrics.increment('GtmJS.Marketo.formBuildFailed', {
            formId: formId
          });
          reportMarketoErrorToSentry(error, {
            form_id: formId
          });
          return Promise.reject(error);
        }
      };
      /**
       * Records a GTM Event
       * @example <caption>Record an event</caption>
       * recordEvent('clicked the button', 2, { location: 'purchase' }).then((response) => console.log(response.event_id))
       */


      GTMClass.prototype.recordEvent = function (identifier, pageviewId, metadata) {
        return __awaiter(this, void 0, void 0, function () {
          var pageview_id;
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                pageview_id = pageviewId || this.pageviewId;

                if (typeof pageview_id !== 'number') {
                  throw new Error('No pageview ID provided');
                }

                return [4
                /*yield*/
                , intercom.post("/events", {
                  identifier: identifier,
                  pageview_id: pageview_id,
                  metadata: metadata
                })];

              case 1:
                return [2
                /*return*/
                , _a.sent().resultOrThrow()];
            }
          });
        });
      };
      /**
       * Loads the Facebook pixel
       */


      GTMClass.prototype.loadFacebookPixel = function () {
        initFacebookPixel();
        this.meta.fbq_init = true;
      };
      /**
       * Records Facebook and Google ad tracking pixels
       * @example <caption>Record ad tracking pixels</caption>
       * recordPixel('clicked the button', {key: 'value'})
       */


      GTMClass.prototype.recordPixel = function (eventName, customAttributes) {
        this.recordFacebookPixel(eventName, customAttributes);
        this.recordGooglePixel(customAttributes);
      };
      /**
       * Records only a Facebook pixel
       * @example <caption>Record a Facebook pixel</caption>
       * recordFacebookPixel('clicked the button', {key: 'value'})
       */


      GTMClass.prototype.recordFacebookPixel = function (eventName, customAttributes) {
        if (this.meta.fbq_init) {
          addFacebookPixel(eventName, customAttributes);
        } else {
          initFacebookPixel();
          addFacebookPixel(eventName, customAttributes);
          this.meta.fbq_init = true;
        }
      };
      /**
       * Records only a Facebook image pixel
       * @example <caption>Record a Facebook image pixel</caption>
       * recordFacebookImagePixel('clicked_button', {key: 'value'})
       */


      GTMClass.prototype.recordFacebookImagePixel = function (eventName, customAttributes) {
        addFacebookImagePixel(eventName, customAttributes);
        return true;
      };
      /**
       * Loads the Google adwords pixel
       */


      GTMClass.prototype.loadGooglePixel = function () {
        initGooglePixel();
        this.meta.google_init = true;
      };
      /**
       * Records only a Google pixel
       * @example <caption>Record a Google pixel</caption>
       * recordGooglePixel({key: 'value'})
       */


      GTMClass.prototype.recordGooglePixel = function (customAttributes) {
        var _this = this;

        if (this.meta.google_init) {
          return addGoogleRemarketing(customAttributes);
        }

        return initGooglePixel().then(function () {
          addGoogleRemarketing(customAttributes);
          _this.meta.google_init = true;
          return _this.meta.google_init;
        });
      };
      /**
       * Records only a Google Image pixel
       * @example <caption>Record a Google image pixel</caption>
       * recordGoogleImgPixel({key: 'value'})
       */


      GTMClass.prototype.recordGoogleImgPixel = function (customAttributes) {
        addGoogleRemarketingImage(customAttributes);
        this.meta.google_img_init = true;
        return this.meta.google_img_init;
      };
      /**
       * Remove Google Image pixel
       * @example <caption>Remove Google Image pixel</caption>
       * recordFacebookPixel({key: 'value'})
       */


      GTMClass.prototype.removeGoogleImgPixel = function () {
        var pixel = document.getElementById('googlePixelIntercom');

        if (pixel && pixel.parentNode) {
          pixel.parentNode.removeChild(pixel);
          return true;
        }

        return false;
      };
      /**
       * Initialize Marketo Forms2.0 forms
       *
       */


      GTMClass.prototype.initMarketoForms = function (hostName, accountId, formId) {
        var _this = this;

        return new Promise(function (resolve, reject) {
          addMarketoFormToDOM(formId);
          loadMarketoFormsJs()["catch"](function () {
            // Errors specific to loading the forms2 JS script
            Metrics.increment('GtmJS.serviceBlockedByClient', {
              service: 'Marketo'
            });
            _this.blockedByClient.Marketo = true;
          }).then(function () {
            return loadMarketoForm(hostName, accountId, formId);
          }).then(function () {
            return whenMarketoFormReady(formId);
          }).then(function () {
            return resolve();
          })["catch"](function (error) {
            Metrics.increment(error.intercomErrorType || 'GtmJS.Marketo.formLoad.scriptError', {
              formId: formId
            });
            reject(error);
          });
        });
      };

      GTMClass.prototype.personalEmailDomain = function (email) {
        return __awaiter(this, void 0, void 0, function () {
          var domain, result, return_value;
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                domain = email.substring(email.lastIndexOf('@') + 1).toLowerCase();
                return [4
                /*yield*/
                , intercom.get('/personal_email_domain', {
                  query: {
                    domain: domain
                  }
                })];

              case 1:
                result = _a.sent();
                return_value = result.error ? false : result.data.personal_email_domain;

                if (return_value) {
                  this.recordEvent('personal-email-detected', undefined, {
                    email: email
                  });
                }

                return [2
                /*return*/
                , return_value];
            }
          });
        });
      };
      /**
       * Load Google Analytics with the supplied property ID
       */


      GTMClass.prototype.loadGoogleAnalytics = function (propertyId) {
        loadGoogleAnalyticsScript(propertyId);
      };
      /**
       * Load Marketo Munchkin script
       */


      GTMClass.prototype.loadMarketoMunchkin = function () {
        loadMarketoMunchkinScript();
      };
      /**
       * Load Clearbit script
       */


      GTMClass.prototype.loadClearbit = function () {
        loadClearbitScript();
      };
      /**
       * Record page view in third party tools
       */


      GTMClass.prototype.recordPageViewInThirdPartyTools = function () {
        trackPageViewInGoogleAnalytics();
        trackPageViewInMarketoMunchkin();
      };
      /**
       * Fire third party events on email submission
       */


      GTMClass.prototype.recordThirdPartyEventsOnEmailSubmission = function () {
        fireThirdPartyEventsOnEmailSubmission();
      };
      /**
       * Determine the user's cookie consent preferences under particular laws. The behaviors required
       * by the laws are abstracted into "consent modes". See {CookieConsentMode} for details.
       *
       * `auto` can be passed as the mode, in which case the user's geolocation will be used to
       * determine what to do.
       *
       * @param consentMode How to determine consent.
       */


      GTMClass.prototype.CookieConsentPreference = function (mode, force) {
        if (force === void 0) {
          force = false;
        }

        return __awaiter(this, void 0, void 0, function () {
          var cookiePreferences;
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                if (!(mode === 'auto')) return [3
                /*break*/
                , 2];
                return [4
                /*yield*/
                , fetchCookieConsentMode()];

              case 1:
                mode = _a.sent();
                _a.label = 2;

              case 2:
                cookiePreferences = getCookieConsentPreference(mode);
                if (!(force || !cookiePreferences && mode === 'consent-required')) return [3
                /*break*/
                , 4];
                return [4
                /*yield*/
                , renderCookieConsentBanner(mode)];

              case 3:
                cookiePreferences = _a.sent();
                _a.label = 4;

              case 4:
                window.dataLayer.push({
                  event: 'gtm-js.cookie-consent.consentChanged'
                });
                return [2
                /*return*/
                , cookiePreferences];
            }
          });
        });
      };

      GTMClass.prototype.renderCookieConsent = function (_a) {
        var node = _a.node,
            onSave = _a.onSave,
            mode = _a.mode;
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_b) {
            switch (_b.label) {
              case 0:
                if (!(mode === 'auto')) return [3
                /*break*/
                , 2];
                return [4
                /*yield*/
                , fetchCookieConsentMode()];

              case 1:
                mode = _b.sent();
                _b.label = 2;

              case 2:
                return [2
                /*return*/
                , renderCookieConsent(node, onSave, mode)];
            }
          });
        });
      };

      GTMClass.prototype.incrementMetric = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return Metrics.increment.apply(Metrics, args);
      };

      GTMClass.prototype.recordTimingMetric = function () {
        var args = [];

        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }

        return Metrics.recordTiming.apply(Metrics, args);
      };
      /**
       * @deprecated
       * This version of the adblock check has been deprecated.
       * More info can be found in the tech plan
       *
       * Detect if ad blocker is blocking calls to server
       * @example <caption>Detect ad blocker</caption>
       * detectAdBlocker().then(blocked => console.log(blocked))
       */


      GTMClass.prototype.detectAdBlocker = function () {
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            Metrics.increment('GtmJS.deprecatedMethodCalled', {
              method: 'detectAdBlocker'
            });
            return [2
            /*return*/
            , Promise.resolve(false)];
          });
        });
      };
      /**
       * Record events specified in the query string. This is used when we need to
       * record an event as we are navigating away from a previous page. To
       * ensure the request is not cancelled, we record it on the subsequent page
       * load.
       */


      GTMClass.prototype.recordOnPageviewEvent = function (window) {
        var urlParams = new URLSearchParams(window.location.search);

        if (urlParams.has('on_pageview_event')) {
          return this.recordEvent(urlParams.get('on_pageview_event') || '');
        }
      };

      GTMClass.prototype.getCookieConsentMode = function () {
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                return [4
                /*yield*/
                , fetchCookieConsentMode()];

              case 1:
                return [2
                /*return*/
                , _a.sent()];
            }
          });
        });
      };

      return GTMClass;
    }();

    return GTMClass;

})));
